

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Oct 23 10:40:27 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 1.44
    28                           ; Generated 14/09/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F47K40 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  01F602                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _red
    67  01F602  0001               	dw	1
    68                           
    69                           	psect	idataBANK0
    70  01F876                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _Board_Low
    74  01F876  035C               	dw	860
    75  01F878  035C               	dw	860
    76  01F87A  035C               	dw	860
    77  01F87C  0337               	dw	823
    78  01F87E  026F               	dw	623
    79  01F880  0295               	dw	661
    80  01F882  0337               	dw	823
    81  01F884  026F               	dw	623
    82  01F886  01C0               	dw	448
    83  01F888  0175               	dw	373
    84  01F88A  00F8               	dw	248
    85  01F88C  00F8               	dw	248
    86  01F88E  00DF               	dw	223
    87  01F890  0000               	dw	0
    88  01F892  0000               	dw	0
    89  01F894  035C               	dw	860
    90  01F896  0295               	dw	661
    91  01F898  0337               	dw	823
    92  01F89A  0295               	dw	661
    93  01F89C  0337               	dw	823
    94  01F89E  026F               	dw	623
    95  01F8A0  01C0               	dw	448
    96  01F8A2  0224               	dw	548
    97  01F8A4  00F8               	dw	248
    98  01F8A6  01C0               	dw	448
    99  01F8A8  0337               	dw	823
   100  01F8AA  035C               	dw	860
   101  01F8AC  035C               	dw	860
   102  01F8AE  035C               	dw	860
   103  01F8B0  026F               	dw	623
   104  01F8B2  0000               	dw	0
   105  01F8B4  0000               	dw	0
   106  01F8B6  0337               	dw	823
   107  01F8B8  01C0               	dw	448
   108  01F8BA  01C0               	dw	448
   109  01F8BC  012A               	dw	298
   110  01F8BE  0000               	dw	0
   111  01F8C0  0000               	dw	0
   112  01F8C2  0000               	dw	0
   113                           
   114                           ;initializer for _Board_High
   115  01F8C4  0363               	dw	867
   116  01F8C6  0363               	dw	867
   117  01F8C8  0363               	dw	867
   118  01F8CA  033D               	dw	829
   119  01F8CC  0275               	dw	629
   120  01F8CE  029A               	dw	666
   121  01F8D0  033D               	dw	829
   122  01F8D2  0275               	dw	629
   123  01F8D4  01C6               	dw	454
   124  01F8D6  017B               	dw	379
   125  01F8D8  00FE               	dw	254
   126  01F8DA  00FE               	dw	254
   127  01F8DC  00E3               	dw	227
   128  01F8DE  0000               	dw	0
   129  01F8E0  0000               	dw	0
   130  01F8E2  0363               	dw	867
   131  01F8E4  029A               	dw	666
   132  01F8E6  033D               	dw	829
   133  01F8E8  029A               	dw	666
   134  01F8EA  033D               	dw	829
   135  01F8EC  0275               	dw	629
   136  01F8EE  01C6               	dw	454
   137  01F8F0  022A               	dw	554
   138  01F8F2  00FE               	dw	254
   139  01F8F4  01C6               	dw	454
   140  01F8F6  033D               	dw	829
   141  01F8F8  0363               	dw	867
   142  01F8FA  0363               	dw	867
   143  01F8FC  0363               	dw	867
   144  01F8FE  0275               	dw	629
   145  01F900  0000               	dw	0
   146  01F902  0000               	dw	0
   147  01F904  033D               	dw	829
   148  01F906  01C6               	dw	454
   149  01F908  01C6               	dw	454
   150  01F90A  0130               	dw	304
   151  01F90C  0000               	dw	0
   152  01F90E  0000               	dw	0
   153  01F910  0000               	dw	0
   154  0000                     _OSCTUNE	set	3805
   155  0000                     _OSCFRQ	set	3806
   156  0000                     _OSCEN	set	3804
   157  0000                     _OSCCON3	set	3802
   158  0000                     _OSCCON1	set	3800
   159  0000                     _ADACTPPSbits	set	3758
   160  0000                     _PPSLOCKbits	set	3744
   161  0000                     _PPSLOCK	set	3744
   162  0000                     _ANSELAbits	set	3857
   163  0000                     _ODCOND	set	3876
   164  0000                     _ODCONC	set	3871
   165  0000                     _ODCONB	set	3863
   166  0000                     _ODCONA	set	3855
   167  0000                     _ODCONE	set	3884
   168  0000                     _WPUC	set	3872
   169  0000                     _WPUA	set	3856
   170  0000                     _WPUB	set	3864
   171  0000                     _WPUE	set	3885
   172  0000                     _WPUD	set	3877
   173  0000                     _ANSELA	set	3857
   174  0000                     _ANSELE	set	3886
   175  0000                     _ANSELD	set	3878
   176  0000                     _ANSELB	set	3865
   177  0000                     _ANSELC	set	3873
   178  0000                     _ADCON1bits	set	3929
   179  0000                     _ADCON2bits	set	3930
   180  0000                     _ADCON3bits	set	3931
   181  0000                     _ADPCH	set	3935
   182  0000                     _ADACQ	set	3932
   183  0000                     _ADPRE	set	3934
   184  0000                     _ADCAP	set	3933
   185  0000                     _ADREF	set	3928
   186  0000                     _ADCLK	set	3927
   187  0000                     _ADACT	set	3926
   188  0000                     _ADCON3	set	3931
   189  0000                     _ADCON2	set	3930
   190  0000                     _ADCON1	set	3929
   191  0000                     _LATCbits	set	3973
   192  0000                     _LATDbits	set	3974
   193  0000                     _TRISCbits	set	3978
   194  0000                     _TRISDbits	set	3979
   195  0000                     _TRISBbits	set	3977
   196  0000                     _LATBbits	set	3972
   197  0000                     _TRISAbits	set	3976
   198  0000                     _TRISD	set	3979
   199  0000                     _TRISC	set	3978
   200  0000                     _TRISB	set	3977
   201  0000                     _TRISA	set	3976
   202  0000                     _TRISE	set	3980
   203  0000                     _LATC	set	3973
   204  0000                     _LATB	set	3972
   205  0000                     _LATA	set	3971
   206  0000                     _LATD	set	3974
   207  0000                     _LATE	set	3975
   208  0000                     _ADERRL	set	3950
   209  0000                     _ADERRH	set	3951
   210  0000                     _ADPREVL	set	3937
   211  0000                     _ADPREVH	set	3938
   212  0000                     _ADFLTRL	set	3954
   213  0000                     _ADFLTRH	set	3955
   214  0000                     _ADSTATbits	set	3941
   215  0000                     _ADACCL	set	3952
   216  0000                     _ADACCH	set	3953
   217  0000                     _ADCNT	set	3943
   218  0000                     _ADRESL	set	3939
   219  0000                     _ADRESH	set	3940
   220  0000                     _ADCON0bits	set	3936
   221  0000                     _ADCON0	set	3936
   222  0000                     _ADSTPTH	set	3945
   223  0000                     _ADSTPTL	set	3944
   224  0000                     _ADUTHH	set	3949
   225  0000                     _ADUTHL	set	3948
   226  0000                     _ADLTHH	set	3947
   227  0000                     _ADLTHL	set	3946
   228  0000                     _ADRPT	set	3942
   229  0000                     _ADSTAT	set	3941
   230  0000                     _GIE	set	32663
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  01F67C                     __pcinit:
   236                           	opt stack 0
   237  01F67C                     start_initialization:
   238                           	opt stack 0
   239  01F67C                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Initialize objects allocated to BANK0 (156 bytes)
   243                           ; load TBLPTR registers with __pidataBANK0
   244  01F67C  0E76               	movlw	low __pidataBANK0
   245  01F67E  6EF6               	movwf	tblptrl,c
   246  01F680  0EF8               	movlw	high __pidataBANK0
   247  01F682  6EF7               	movwf	tblptrh,c
   248  01F684  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   249  01F686  6EF8               	movwf	tblptru,c
   250  01F688  EE00  F060         	lfsr	0,__pdataBANK0
   251  01F68C  EE10 F09C          	lfsr	1,156
   252  01F690                     copy_data0:
   253  01F690  0009               	tblrd		*+
   254  01F692  CFF5 FFEE          	movff	tablat,postinc0
   255  01F696  50E5               	movf	postdec1,w,c
   256  01F698  50E1               	movf	fsr1l,w,c
   257  01F69A  E1FA               	bnz	copy_data0
   258                           
   259                           ; Initialize objects allocated to COMRAM (2 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  01F69C  0E02               	movlw	low __pidataCOMRAM
   262  01F69E  6EF6               	movwf	tblptrl,c
   263  01F6A0  0EF6               	movlw	high __pidataCOMRAM
   264  01F6A2  6EF7               	movwf	tblptrh,c
   265  01F6A4  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   266  01F6A6  6EF8               	movwf	tblptru,c
   267  01F6A8  0009               	tblrd		*+	;fetch initializer
   268  01F6AA  CFF5 F018          	movff	tablat,__pdataCOMRAM
   269  01F6AE  0009               	tblrd		*+	;fetch initializer
   270  01F6B0  CFF5 F019          	movff	tablat,__pdataCOMRAM+1
   271                           
   272                           ; Clear objects allocated to COMRAM (10 bytes)
   273  01F6B4  EE00  F00E         	lfsr	0,__pbssCOMRAM
   274  01F6B8  0E0A               	movlw	10
   275  01F6BA                     clear_0:
   276  01F6BA  6AEE               	clrf	postinc0,c
   277  01F6BC  06E8               	decf	wreg,f,c
   278  01F6BE  E1FD               	bnz	clear_0
   279  01F6C0                     end_of_initialization:
   280                           	opt stack 0
   281  01F6C0                     __end_of__initialization:
   282                           	opt stack 0
   283  01F6C0  0100               	movlb	0
   284  01F6C2  EFF4  F0FC         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	bssCOMRAM
   295  00000E                     __pbssCOMRAM:
   296                           	opt stack 0
   297  00000E                     _green:
   298                           	opt stack 0
   299  00000E                     	ds	2
   300  000010                     _light:
   301                           	opt stack 0
   302  000010                     	ds	2
   303  000012                     _result:
   304                           	opt stack 0
   305  000012                     	ds	2
   306  000014                     _board:
   307                           	opt stack 0
   308  000014                     	ds	2
   309  000016                     _board_select:
   310                           	opt stack 0
   311  000016                     	ds	2
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	dataCOMRAM
   322  000018                     __pdataCOMRAM:
   323                           	opt stack 0
   324  000018                     _red:
   325                           	opt stack 0
   326  000018                     	ds	2
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           postdec1	equ	0xFE5
   334                           fsr1l	equ	0xFE1
   335                           
   336                           	psect	dataBANK0
   337  000060                     __pdataBANK0:
   338                           	opt stack 0
   339  000060                     _Board_Low:
   340                           	opt stack 0
   341  000060                     	ds	78
   342  0000AE                     _Board_High:
   343                           	opt stack 0
   344  0000AE                     	ds	78
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	opt stack 0
   357  000001                     ?_ADCC_GetConversionResult:
   358                           	opt stack 0
   359  000001                     ?___wmul:
   360                           	opt stack 0
   361  000001                     ADCC_StartConversion@channel:
   362                           	opt stack 0
   363  000001                     PIN_MANAGER_Initialize@state:
   364                           	opt stack 0
   365  000001                     ___wmul@multiplier:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x0
   369  000001                     	ds	1
   370  000002                     
   371                           ; 1 bytes @ 0x1
   372  000002                     	ds	1
   373  000003                     ??_ADCC_GetConversionResult:
   374  000003                     ___wmul@multiplicand:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x2
   378  000003                     	ds	2
   379  000005                     ??_Board_Select_Value:
   380  000005                     ___wmul@product:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4
   384  000005                     	ds	2
   385  000007                     LED_Value@high:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x6
   389  000007                     	ds	2
   390  000009                     LED_Value@low:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x8
   394  000009                     	ds	2
   395  00000B                     LED_Value@channel:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0xA
   399  00000B                     	ds	1
   400  00000C                     ??_LED_Value:
   401                           
   402                           ; 1 bytes @ 0xB
   403  00000C                     	ds	1
   404  00000D                     ??_main:
   405                           
   406                           ; 1 bytes @ 0xC
   407  00000D                     	ds	1
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 112 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   438 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   440 ;;Total ram usage:        1 bytes
   441 ;; Hardware stack levels required when called:    2
   442 ;; This function calls:
   443 ;;		_ADCC_Initialize
   444 ;;		_Board_Init
   445 ;;		_Board_Select_Value
   446 ;;		_LED_Value
   447 ;;		_SYSTEM_Initialize
   448 ;;		___wmul
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text0
   455  01F9E8                     __ptext0:
   456                           	opt stack 0
   457  01F9E8                     _main:
   458                           	opt stack 29
   459                           
   460                           ;main.c: 114: SYSTEM_Initialize();
   461                           
   462                           ;incstack = 0
   463  01F9E8  EC0E  F0FB         	call	_SYSTEM_Initialize	;wreg free
   464                           
   465                           ;main.c: 115: ADCC_Initialize();
   466  01F9EC  EC63  F0FB         	call	_ADCC_Initialize	;wreg free
   467  01F9F0                     
   468                           ;main.c: 119: {
   469                           ;main.c: 120: Board_Select_Value();
   470  01F9F0  EC89  F0FC         	call	_Board_Select_Value	;wreg free
   471                           
   472                           ;main.c: 121: Board_Init();
   473  01F9F4  ECB8  F0FB         	call	_Board_Init	;wreg free
   474                           
   475                           ;main.c: 123: LATBbits.LATB3 = LED_Value(Board_High[board][0],Board_Low[board][0],AND1);
   476  01F9F8  C014  F001         	movff	_board,___wmul@multiplier
   477  01F9FC  C015  F002         	movff	_board+1,___wmul@multiplier+1
   478  01FA00  0E00               	movlw	0
   479  01FA02  6E04               	movwf	___wmul@multiplicand+1,c
   480  01FA04  0E1A               	movlw	26
   481  01FA06  6E03               	movwf	___wmul@multiplicand,c
   482  01FA08  EC2B  F0FB         	call	___wmul	;wreg free
   483  01FA0C  0EAE               	movlw	low _Board_High
   484  01FA0E  2401               	addwf	?___wmul,w,c
   485  01FA10  6ED9               	movwf	fsr2l,c
   486  01FA12  0E00               	movlw	high _Board_High
   487  01FA14  2002               	addwfc	?___wmul+1,w,c
   488  01FA16  6EDA               	movwf	fsr2h,c
   489  01FA18  CFDE F007          	movff	postinc2,LED_Value@high
   490  01FA1C  CFDD F008          	movff	postdec2,LED_Value@high+1
   491  01FA20  C014  F001         	movff	_board,___wmul@multiplier
   492  01FA24  C015  F002         	movff	_board+1,___wmul@multiplier+1
   493  01FA28  0E00               	movlw	0
   494  01FA2A  6E04               	movwf	___wmul@multiplicand+1,c
   495  01FA2C  0E1A               	movlw	26
   496  01FA2E  6E03               	movwf	___wmul@multiplicand,c
   497  01FA30  EC2B  F0FB         	call	___wmul	;wreg free
   498  01FA34  0E60               	movlw	low _Board_Low
   499  01FA36  2401               	addwf	?___wmul,w,c
   500  01FA38  6ED9               	movwf	fsr2l,c
   501  01FA3A  0E00               	movlw	high _Board_Low
   502  01FA3C  2002               	addwfc	?___wmul+1,w,c
   503  01FA3E  6EDA               	movwf	fsr2h,c
   504  01FA40  CFDE F009          	movff	postinc2,LED_Value@low
   505  01FA44  CFDD F00A          	movff	postdec2,LED_Value@low+1
   506  01FA48  0E19               	movlw	25
   507  01FA4A  6E0B               	movwf	LED_Value@channel,c
   508  01FA4C  EC8B  F0FB         	call	_LED_Value	;wreg free
   509  01FA50  6E0D               	movwf	??_main& (0+255),c
   510  01FA52  460D               	rlncf	??_main,f,c
   511  01FA54  460D               	rlncf	??_main,f,c
   512  01FA56  460D               	rlncf	??_main,f,c
   513  01FA58  5084               	movf	3972,w,c	;volatile
   514  01FA5A  180D               	xorwf	??_main,w,c
   515  01FA5C  0BF7               	andlw	-9
   516  01FA5E  180D               	xorwf	??_main,w,c
   517  01FA60  6E84               	movwf	3972,c	;volatile
   518                           
   519                           ;main.c: 124: LATBbits.LATB2 = LED_Value(Board_High[board][1],Board_Low[board][1],AND0);
   520  01FA62  C014  F001         	movff	_board,___wmul@multiplier
   521  01FA66  C015  F002         	movff	_board+1,___wmul@multiplier+1
   522  01FA6A  0E00               	movlw	0
   523  01FA6C  6E04               	movwf	___wmul@multiplicand+1,c
   524  01FA6E  0E1A               	movlw	26
   525  01FA70  6E03               	movwf	___wmul@multiplicand,c
   526  01FA72  EC2B  F0FB         	call	___wmul	;wreg free
   527  01FA76  0E02               	movlw	2
   528  01FA78  2601               	addwf	?___wmul,f,c
   529  01FA7A  0E00               	movlw	0
   530  01FA7C  2202               	addwfc	?___wmul+1,f,c
   531  01FA7E  0EAE               	movlw	low _Board_High
   532  01FA80  2401               	addwf	?___wmul,w,c
   533  01FA82  6ED9               	movwf	fsr2l,c
   534  01FA84  0E00               	movlw	high _Board_High
   535  01FA86  2002               	addwfc	?___wmul+1,w,c
   536  01FA88  6EDA               	movwf	fsr2h,c
   537  01FA8A  CFDE F007          	movff	postinc2,LED_Value@high
   538  01FA8E  CFDD F008          	movff	postdec2,LED_Value@high+1
   539  01FA92  C014  F001         	movff	_board,___wmul@multiplier
   540  01FA96  C015  F002         	movff	_board+1,___wmul@multiplier+1
   541  01FA9A  0E00               	movlw	0
   542  01FA9C  6E04               	movwf	___wmul@multiplicand+1,c
   543  01FA9E  0E1A               	movlw	26
   544  01FAA0  6E03               	movwf	___wmul@multiplicand,c
   545  01FAA2  EC2B  F0FB         	call	___wmul	;wreg free
   546  01FAA6  0E02               	movlw	2
   547  01FAA8  2601               	addwf	?___wmul,f,c
   548  01FAAA  0E00               	movlw	0
   549  01FAAC  2202               	addwfc	?___wmul+1,f,c
   550  01FAAE  0E60               	movlw	low _Board_Low
   551  01FAB0  2401               	addwf	?___wmul,w,c
   552  01FAB2  6ED9               	movwf	fsr2l,c
   553  01FAB4  0E00               	movlw	high _Board_Low
   554  01FAB6  2002               	addwfc	?___wmul+1,w,c
   555  01FAB8  6EDA               	movwf	fsr2h,c
   556  01FABA  CFDE F009          	movff	postinc2,LED_Value@low
   557  01FABE  CFDD F00A          	movff	postdec2,LED_Value@low+1
   558  01FAC2  0E18               	movlw	24
   559  01FAC4  6E0B               	movwf	LED_Value@channel,c
   560  01FAC6  EC8B  F0FB         	call	_LED_Value	;wreg free
   561  01FACA  6E0D               	movwf	??_main& (0+255),c
   562  01FACC  460D               	rlncf	??_main,f,c
   563  01FACE  460D               	rlncf	??_main,f,c
   564  01FAD0  5084               	movf	3972,w,c	;volatile
   565  01FAD2  180D               	xorwf	??_main,w,c
   566  01FAD4  0BFB               	andlw	-5
   567  01FAD6  180D               	xorwf	??_main,w,c
   568  01FAD8  6E84               	movwf	3972,c	;volatile
   569                           
   570                           ;main.c: 125: LATBbits.LATB1 = LED_Value(Board_High[board][2],Board_Low[board][2],ANC3);
   571  01FADA  C014  F001         	movff	_board,___wmul@multiplier
   572  01FADE  C015  F002         	movff	_board+1,___wmul@multiplier+1
   573  01FAE2  0E00               	movlw	0
   574  01FAE4  6E04               	movwf	___wmul@multiplicand+1,c
   575  01FAE6  0E1A               	movlw	26
   576  01FAE8  6E03               	movwf	___wmul@multiplicand,c
   577  01FAEA  EC2B  F0FB         	call	___wmul	;wreg free
   578  01FAEE  0E04               	movlw	4
   579  01FAF0  2601               	addwf	?___wmul,f,c
   580  01FAF2  0E00               	movlw	0
   581  01FAF4  2202               	addwfc	?___wmul+1,f,c
   582  01FAF6  0EAE               	movlw	low _Board_High
   583  01FAF8  2401               	addwf	?___wmul,w,c
   584  01FAFA  6ED9               	movwf	fsr2l,c
   585  01FAFC  0E00               	movlw	high _Board_High
   586  01FAFE  2002               	addwfc	?___wmul+1,w,c
   587  01FB00  6EDA               	movwf	fsr2h,c
   588  01FB02  CFDE F007          	movff	postinc2,LED_Value@high
   589  01FB06  CFDD F008          	movff	postdec2,LED_Value@high+1
   590  01FB0A  C014  F001         	movff	_board,___wmul@multiplier
   591  01FB0E  C015  F002         	movff	_board+1,___wmul@multiplier+1
   592  01FB12  0E00               	movlw	0
   593  01FB14  6E04               	movwf	___wmul@multiplicand+1,c
   594  01FB16  0E1A               	movlw	26
   595  01FB18  6E03               	movwf	___wmul@multiplicand,c
   596  01FB1A  EC2B  F0FB         	call	___wmul	;wreg free
   597  01FB1E  0E04               	movlw	4
   598  01FB20  2601               	addwf	?___wmul,f,c
   599  01FB22  0E00               	movlw	0
   600  01FB24  2202               	addwfc	?___wmul+1,f,c
   601  01FB26  0E60               	movlw	low _Board_Low
   602  01FB28  2401               	addwf	?___wmul,w,c
   603  01FB2A  6ED9               	movwf	fsr2l,c
   604  01FB2C  0E00               	movlw	high _Board_Low
   605  01FB2E  2002               	addwfc	?___wmul+1,w,c
   606  01FB30  6EDA               	movwf	fsr2h,c
   607  01FB32  CFDE F009          	movff	postinc2,LED_Value@low
   608  01FB36  CFDD F00A          	movff	postdec2,LED_Value@low+1
   609  01FB3A  0E13               	movlw	19
   610  01FB3C  6E0B               	movwf	LED_Value@channel,c
   611  01FB3E  EC8B  F0FB         	call	_LED_Value	;wreg free
   612  01FB42  6E0D               	movwf	??_main& (0+255),c
   613  01FB44  460D               	rlncf	??_main,f,c
   614  01FB46  5084               	movf	3972,w,c	;volatile
   615  01FB48  180D               	xorwf	??_main,w,c
   616  01FB4A  0BFD               	andlw	-3
   617  01FB4C  180D               	xorwf	??_main,w,c
   618  01FB4E  6E84               	movwf	3972,c	;volatile
   619                           
   620                           ;main.c: 126: LATBbits.LATB0 = LED_Value(Board_High[board][3],Board_Low[board][3],ANC2);
   621  01FB50  C014  F001         	movff	_board,___wmul@multiplier
   622  01FB54  C015  F002         	movff	_board+1,___wmul@multiplier+1
   623  01FB58  0E00               	movlw	0
   624  01FB5A  6E04               	movwf	___wmul@multiplicand+1,c
   625  01FB5C  0E1A               	movlw	26
   626  01FB5E  6E03               	movwf	___wmul@multiplicand,c
   627  01FB60  EC2B  F0FB         	call	___wmul	;wreg free
   628  01FB64  0E06               	movlw	6
   629  01FB66  2601               	addwf	?___wmul,f,c
   630  01FB68  0E00               	movlw	0
   631  01FB6A  2202               	addwfc	?___wmul+1,f,c
   632  01FB6C  0EAE               	movlw	low _Board_High
   633  01FB6E  2401               	addwf	?___wmul,w,c
   634  01FB70  6ED9               	movwf	fsr2l,c
   635  01FB72  0E00               	movlw	high _Board_High
   636  01FB74  2002               	addwfc	?___wmul+1,w,c
   637  01FB76  6EDA               	movwf	fsr2h,c
   638  01FB78  CFDE F007          	movff	postinc2,LED_Value@high
   639  01FB7C  CFDD F008          	movff	postdec2,LED_Value@high+1
   640  01FB80  C014  F001         	movff	_board,___wmul@multiplier
   641  01FB84  C015  F002         	movff	_board+1,___wmul@multiplier+1
   642  01FB88  0E00               	movlw	0
   643  01FB8A  6E04               	movwf	___wmul@multiplicand+1,c
   644  01FB8C  0E1A               	movlw	26
   645  01FB8E  6E03               	movwf	___wmul@multiplicand,c
   646  01FB90  EC2B  F0FB         	call	___wmul	;wreg free
   647  01FB94  0E06               	movlw	6
   648  01FB96  2601               	addwf	?___wmul,f,c
   649  01FB98  0E00               	movlw	0
   650  01FB9A  2202               	addwfc	?___wmul+1,f,c
   651  01FB9C  0E60               	movlw	low _Board_Low
   652  01FB9E  2401               	addwf	?___wmul,w,c
   653  01FBA0  6ED9               	movwf	fsr2l,c
   654  01FBA2  0E00               	movlw	high _Board_Low
   655  01FBA4  2002               	addwfc	?___wmul+1,w,c
   656  01FBA6  6EDA               	movwf	fsr2h,c
   657  01FBA8  CFDE F009          	movff	postinc2,LED_Value@low
   658  01FBAC  CFDD F00A          	movff	postdec2,LED_Value@low+1
   659  01FBB0  0E12               	movlw	18
   660  01FBB2  6E0B               	movwf	LED_Value@channel,c
   661  01FBB4  EC8B  F0FB         	call	_LED_Value	;wreg free
   662  01FBB8  6E0D               	movwf	??_main& (0+255),c
   663  01FBBA  5084               	movf	3972,w,c	;volatile
   664  01FBBC  180D               	xorwf	??_main,w,c
   665  01FBBE  0BFE               	andlw	-2
   666  01FBC0  180D               	xorwf	??_main,w,c
   667  01FBC2  6E84               	movwf	3972,c	;volatile
   668                           
   669                           ;main.c: 127: LATDbits.LATD7 = LED_Value(Board_High[board][4],Board_Low[board][4],ANC1);
   670  01FBC4  C014  F001         	movff	_board,___wmul@multiplier
   671  01FBC8  C015  F002         	movff	_board+1,___wmul@multiplier+1
   672  01FBCC  0E00               	movlw	0
   673  01FBCE  6E04               	movwf	___wmul@multiplicand+1,c
   674  01FBD0  0E1A               	movlw	26
   675  01FBD2  6E03               	movwf	___wmul@multiplicand,c
   676  01FBD4  EC2B  F0FB         	call	___wmul	;wreg free
   677  01FBD8  0E08               	movlw	8
   678  01FBDA  2601               	addwf	?___wmul,f,c
   679  01FBDC  0E00               	movlw	0
   680  01FBDE  2202               	addwfc	?___wmul+1,f,c
   681  01FBE0  0EAE               	movlw	low _Board_High
   682  01FBE2  2401               	addwf	?___wmul,w,c
   683  01FBE4  6ED9               	movwf	fsr2l,c
   684  01FBE6  0E00               	movlw	high _Board_High
   685  01FBE8  2002               	addwfc	?___wmul+1,w,c
   686  01FBEA  6EDA               	movwf	fsr2h,c
   687  01FBEC  CFDE F007          	movff	postinc2,LED_Value@high
   688  01FBF0  CFDD F008          	movff	postdec2,LED_Value@high+1
   689  01FBF4  C014  F001         	movff	_board,___wmul@multiplier
   690  01FBF8  C015  F002         	movff	_board+1,___wmul@multiplier+1
   691  01FBFC  0E00               	movlw	0
   692  01FBFE  6E04               	movwf	___wmul@multiplicand+1,c
   693  01FC00  0E1A               	movlw	26
   694  01FC02  6E03               	movwf	___wmul@multiplicand,c
   695  01FC04  EC2B  F0FB         	call	___wmul	;wreg free
   696  01FC08  0E08               	movlw	8
   697  01FC0A  2601               	addwf	?___wmul,f,c
   698  01FC0C  0E00               	movlw	0
   699  01FC0E  2202               	addwfc	?___wmul+1,f,c
   700  01FC10  0E60               	movlw	low _Board_Low
   701  01FC12  2401               	addwf	?___wmul,w,c
   702  01FC14  6ED9               	movwf	fsr2l,c
   703  01FC16  0E00               	movlw	high _Board_Low
   704  01FC18  2002               	addwfc	?___wmul+1,w,c
   705  01FC1A  6EDA               	movwf	fsr2h,c
   706  01FC1C  CFDE F009          	movff	postinc2,LED_Value@low
   707  01FC20  CFDD F00A          	movff	postdec2,LED_Value@low+1
   708  01FC24  0E11               	movlw	17
   709  01FC26  6E0B               	movwf	LED_Value@channel,c
   710  01FC28  EC8B  F0FB         	call	_LED_Value	;wreg free
   711  01FC2C  6E0D               	movwf	??_main& (0+255),c
   712  01FC2E  320D               	rrcf	??_main,f,c
   713  01FC30  320D               	rrcf	??_main,f,c
   714  01FC32  5086               	movf	3974,w,c	;volatile
   715  01FC34  180D               	xorwf	??_main,w,c
   716  01FC36  0B7F               	andlw	-129
   717  01FC38  180D               	xorwf	??_main,w,c
   718  01FC3A  6E86               	movwf	3974,c	;volatile
   719                           
   720                           ;main.c: 128: LATDbits.LATD6 = LED_Value(Board_High[board][5],Board_Low[board][5],ANC0);
   721  01FC3C  C014  F001         	movff	_board,___wmul@multiplier
   722  01FC40  C015  F002         	movff	_board+1,___wmul@multiplier+1
   723  01FC44  0E00               	movlw	0
   724  01FC46  6E04               	movwf	___wmul@multiplicand+1,c
   725  01FC48  0E1A               	movlw	26
   726  01FC4A  6E03               	movwf	___wmul@multiplicand,c
   727  01FC4C  EC2B  F0FB         	call	___wmul	;wreg free
   728  01FC50  0E0A               	movlw	10
   729  01FC52  2601               	addwf	?___wmul,f,c
   730  01FC54  0E00               	movlw	0
   731  01FC56  2202               	addwfc	?___wmul+1,f,c
   732  01FC58  0EAE               	movlw	low _Board_High
   733  01FC5A  2401               	addwf	?___wmul,w,c
   734  01FC5C  6ED9               	movwf	fsr2l,c
   735  01FC5E  0E00               	movlw	high _Board_High
   736  01FC60  2002               	addwfc	?___wmul+1,w,c
   737  01FC62  6EDA               	movwf	fsr2h,c
   738  01FC64  CFDE F007          	movff	postinc2,LED_Value@high
   739  01FC68  CFDD F008          	movff	postdec2,LED_Value@high+1
   740  01FC6C  C014  F001         	movff	_board,___wmul@multiplier
   741  01FC70  C015  F002         	movff	_board+1,___wmul@multiplier+1
   742  01FC74  0E00               	movlw	0
   743  01FC76  6E04               	movwf	___wmul@multiplicand+1,c
   744  01FC78  0E1A               	movlw	26
   745  01FC7A  6E03               	movwf	___wmul@multiplicand,c
   746  01FC7C  EC2B  F0FB         	call	___wmul	;wreg free
   747  01FC80  0E0A               	movlw	10
   748  01FC82  2601               	addwf	?___wmul,f,c
   749  01FC84  0E00               	movlw	0
   750  01FC86  2202               	addwfc	?___wmul+1,f,c
   751  01FC88  0E60               	movlw	low _Board_Low
   752  01FC8A  2401               	addwf	?___wmul,w,c
   753  01FC8C  6ED9               	movwf	fsr2l,c
   754  01FC8E  0E00               	movlw	high _Board_Low
   755  01FC90  2002               	addwfc	?___wmul+1,w,c
   756  01FC92  6EDA               	movwf	fsr2h,c
   757  01FC94  CFDE F009          	movff	postinc2,LED_Value@low
   758  01FC98  CFDD F00A          	movff	postdec2,LED_Value@low+1
   759  01FC9C  0E10               	movlw	16
   760  01FC9E  6E0B               	movwf	LED_Value@channel,c
   761  01FCA0  EC8B  F0FB         	call	_LED_Value	;wreg free
   762  01FCA4  6E0D               	movwf	??_main& (0+255),c
   763  01FCA6  3A0D               	swapf	??_main,f,c
   764  01FCA8  460D               	rlncf	??_main,f,c
   765  01FCAA  460D               	rlncf	??_main,f,c
   766  01FCAC  5086               	movf	3974,w,c	;volatile
   767  01FCAE  180D               	xorwf	??_main,w,c
   768  01FCB0  0BBF               	andlw	-65
   769  01FCB2  180D               	xorwf	??_main,w,c
   770  01FCB4  6E86               	movwf	3974,c	;volatile
   771                           
   772                           ;main.c: 129: LATDbits.LATD5 = LED_Value(Board_High[board][6],Board_Low[board][6],ANA6);
   773  01FCB6  C014  F001         	movff	_board,___wmul@multiplier
   774  01FCBA  C015  F002         	movff	_board+1,___wmul@multiplier+1
   775  01FCBE  0E00               	movlw	0
   776  01FCC0  6E04               	movwf	___wmul@multiplicand+1,c
   777  01FCC2  0E1A               	movlw	26
   778  01FCC4  6E03               	movwf	___wmul@multiplicand,c
   779  01FCC6  EC2B  F0FB         	call	___wmul	;wreg free
   780  01FCCA  0E0C               	movlw	12
   781  01FCCC  2601               	addwf	?___wmul,f,c
   782  01FCCE  0E00               	movlw	0
   783  01FCD0  2202               	addwfc	?___wmul+1,f,c
   784  01FCD2  0EAE               	movlw	low _Board_High
   785  01FCD4  2401               	addwf	?___wmul,w,c
   786  01FCD6  6ED9               	movwf	fsr2l,c
   787  01FCD8  0E00               	movlw	high _Board_High
   788  01FCDA  2002               	addwfc	?___wmul+1,w,c
   789  01FCDC  6EDA               	movwf	fsr2h,c
   790  01FCDE  CFDE F007          	movff	postinc2,LED_Value@high
   791  01FCE2  CFDD F008          	movff	postdec2,LED_Value@high+1
   792  01FCE6  C014  F001         	movff	_board,___wmul@multiplier
   793  01FCEA  C015  F002         	movff	_board+1,___wmul@multiplier+1
   794  01FCEE  0E00               	movlw	0
   795  01FCF0  6E04               	movwf	___wmul@multiplicand+1,c
   796  01FCF2  0E1A               	movlw	26
   797  01FCF4  6E03               	movwf	___wmul@multiplicand,c
   798  01FCF6  EC2B  F0FB         	call	___wmul	;wreg free
   799  01FCFA  0E0C               	movlw	12
   800  01FCFC  2601               	addwf	?___wmul,f,c
   801  01FCFE  0E00               	movlw	0
   802  01FD00  2202               	addwfc	?___wmul+1,f,c
   803  01FD02  0E60               	movlw	low _Board_Low
   804  01FD04  2401               	addwf	?___wmul,w,c
   805  01FD06  6ED9               	movwf	fsr2l,c
   806  01FD08  0E00               	movlw	high _Board_Low
   807  01FD0A  2002               	addwfc	?___wmul+1,w,c
   808  01FD0C  6EDA               	movwf	fsr2h,c
   809  01FD0E  CFDE F009          	movff	postinc2,LED_Value@low
   810  01FD12  CFDD F00A          	movff	postdec2,LED_Value@low+1
   811  01FD16  0E06               	movlw	6
   812  01FD18  6E0B               	movwf	LED_Value@channel,c
   813  01FD1A  EC8B  F0FB         	call	_LED_Value	;wreg free
   814  01FD1E  6E0D               	movwf	??_main& (0+255),c
   815  01FD20  3A0D               	swapf	??_main,f,c
   816  01FD22  460D               	rlncf	??_main,f,c
   817  01FD24  5086               	movf	3974,w,c	;volatile
   818  01FD26  180D               	xorwf	??_main,w,c
   819  01FD28  0BDF               	andlw	-33
   820  01FD2A  180D               	xorwf	??_main,w,c
   821  01FD2C  6E86               	movwf	3974,c	;volatile
   822                           
   823                           ;main.c: 130: LATDbits.LATD4 = LED_Value(Board_High[board][7],Board_Low[board][7],ANA7);
   824  01FD2E  C014  F001         	movff	_board,___wmul@multiplier
   825  01FD32  C015  F002         	movff	_board+1,___wmul@multiplier+1
   826  01FD36  0E00               	movlw	0
   827  01FD38  6E04               	movwf	___wmul@multiplicand+1,c
   828  01FD3A  0E1A               	movlw	26
   829  01FD3C  6E03               	movwf	___wmul@multiplicand,c
   830  01FD3E  EC2B  F0FB         	call	___wmul	;wreg free
   831  01FD42  0E0E               	movlw	14
   832  01FD44  2601               	addwf	?___wmul,f,c
   833  01FD46  0E00               	movlw	0
   834  01FD48  2202               	addwfc	?___wmul+1,f,c
   835  01FD4A  0EAE               	movlw	low _Board_High
   836  01FD4C  2401               	addwf	?___wmul,w,c
   837  01FD4E  6ED9               	movwf	fsr2l,c
   838  01FD50  0E00               	movlw	high _Board_High
   839  01FD52  2002               	addwfc	?___wmul+1,w,c
   840  01FD54  6EDA               	movwf	fsr2h,c
   841  01FD56  CFDE F007          	movff	postinc2,LED_Value@high
   842  01FD5A  CFDD F008          	movff	postdec2,LED_Value@high+1
   843  01FD5E  C014  F001         	movff	_board,___wmul@multiplier
   844  01FD62  C015  F002         	movff	_board+1,___wmul@multiplier+1
   845  01FD66  0E00               	movlw	0
   846  01FD68  6E04               	movwf	___wmul@multiplicand+1,c
   847  01FD6A  0E1A               	movlw	26
   848  01FD6C  6E03               	movwf	___wmul@multiplicand,c
   849  01FD6E  EC2B  F0FB         	call	___wmul	;wreg free
   850  01FD72  0E0E               	movlw	14
   851  01FD74  2601               	addwf	?___wmul,f,c
   852  01FD76  0E00               	movlw	0
   853  01FD78  2202               	addwfc	?___wmul+1,f,c
   854  01FD7A  0E60               	movlw	low _Board_Low
   855  01FD7C  2401               	addwf	?___wmul,w,c
   856  01FD7E  6ED9               	movwf	fsr2l,c
   857  01FD80  0E00               	movlw	high _Board_Low
   858  01FD82  2002               	addwfc	?___wmul+1,w,c
   859  01FD84  6EDA               	movwf	fsr2h,c
   860  01FD86  CFDE F009          	movff	postinc2,LED_Value@low
   861  01FD8A  CFDD F00A          	movff	postdec2,LED_Value@low+1
   862  01FD8E  0E07               	movlw	7
   863  01FD90  6E0B               	movwf	LED_Value@channel,c
   864  01FD92  EC8B  F0FB         	call	_LED_Value	;wreg free
   865  01FD96  6E0D               	movwf	??_main& (0+255),c
   866  01FD98  3A0D               	swapf	??_main,f,c
   867  01FD9A  5086               	movf	3974,w,c	;volatile
   868  01FD9C  180D               	xorwf	??_main,w,c
   869  01FD9E  0BEF               	andlw	-17
   870  01FDA0  180D               	xorwf	??_main,w,c
   871  01FDA2  6E86               	movwf	3974,c	;volatile
   872                           
   873                           ;main.c: 131: LATCbits.LATC7 = LED_Value(Board_High[board][8],Board_Low[board][8],ANE2);
   874  01FDA4  C014  F001         	movff	_board,___wmul@multiplier
   875  01FDA8  C015  F002         	movff	_board+1,___wmul@multiplier+1
   876  01FDAC  0E00               	movlw	0
   877  01FDAE  6E04               	movwf	___wmul@multiplicand+1,c
   878  01FDB0  0E1A               	movlw	26
   879  01FDB2  6E03               	movwf	___wmul@multiplicand,c
   880  01FDB4  EC2B  F0FB         	call	___wmul	;wreg free
   881  01FDB8  0E10               	movlw	16
   882  01FDBA  2601               	addwf	?___wmul,f,c
   883  01FDBC  0E00               	movlw	0
   884  01FDBE  2202               	addwfc	?___wmul+1,f,c
   885  01FDC0  0EAE               	movlw	low _Board_High
   886  01FDC2  2401               	addwf	?___wmul,w,c
   887  01FDC4  6ED9               	movwf	fsr2l,c
   888  01FDC6  0E00               	movlw	high _Board_High
   889  01FDC8  2002               	addwfc	?___wmul+1,w,c
   890  01FDCA  6EDA               	movwf	fsr2h,c
   891  01FDCC  CFDE F007          	movff	postinc2,LED_Value@high
   892  01FDD0  CFDD F008          	movff	postdec2,LED_Value@high+1
   893  01FDD4  C014  F001         	movff	_board,___wmul@multiplier
   894  01FDD8  C015  F002         	movff	_board+1,___wmul@multiplier+1
   895  01FDDC  0E00               	movlw	0
   896  01FDDE  6E04               	movwf	___wmul@multiplicand+1,c
   897  01FDE0  0E1A               	movlw	26
   898  01FDE2  6E03               	movwf	___wmul@multiplicand,c
   899  01FDE4  EC2B  F0FB         	call	___wmul	;wreg free
   900  01FDE8  0E10               	movlw	16
   901  01FDEA  2601               	addwf	?___wmul,f,c
   902  01FDEC  0E00               	movlw	0
   903  01FDEE  2202               	addwfc	?___wmul+1,f,c
   904  01FDF0  0E60               	movlw	low _Board_Low
   905  01FDF2  2401               	addwf	?___wmul,w,c
   906  01FDF4  6ED9               	movwf	fsr2l,c
   907  01FDF6  0E00               	movlw	high _Board_Low
   908  01FDF8  2002               	addwfc	?___wmul+1,w,c
   909  01FDFA  6EDA               	movwf	fsr2h,c
   910  01FDFC  CFDE F009          	movff	postinc2,LED_Value@low
   911  01FE00  CFDD F00A          	movff	postdec2,LED_Value@low+1
   912  01FE04  0E22               	movlw	34
   913  01FE06  6E0B               	movwf	LED_Value@channel,c
   914  01FE08  EC8B  F0FB         	call	_LED_Value	;wreg free
   915  01FE0C  6E0D               	movwf	??_main& (0+255),c
   916  01FE0E  320D               	rrcf	??_main,f,c
   917  01FE10  320D               	rrcf	??_main,f,c
   918  01FE12  5085               	movf	3973,w,c	;volatile
   919  01FE14  180D               	xorwf	??_main,w,c
   920  01FE16  0B7F               	andlw	-129
   921  01FE18  180D               	xorwf	??_main,w,c
   922  01FE1A  6E85               	movwf	3973,c	;volatile
   923                           
   924                           ;main.c: 132: LATCbits.LATC6 = LED_Value(Board_High[board][9],Board_Low[board][9],ANE1);
   925  01FE1C  C014  F001         	movff	_board,___wmul@multiplier
   926  01FE20  C015  F002         	movff	_board+1,___wmul@multiplier+1
   927  01FE24  0E00               	movlw	0
   928  01FE26  6E04               	movwf	___wmul@multiplicand+1,c
   929  01FE28  0E1A               	movlw	26
   930  01FE2A  6E03               	movwf	___wmul@multiplicand,c
   931  01FE2C  EC2B  F0FB         	call	___wmul	;wreg free
   932  01FE30  0E12               	movlw	18
   933  01FE32  2601               	addwf	?___wmul,f,c
   934  01FE34  0E00               	movlw	0
   935  01FE36  2202               	addwfc	?___wmul+1,f,c
   936  01FE38  0EAE               	movlw	low _Board_High
   937  01FE3A  2401               	addwf	?___wmul,w,c
   938  01FE3C  6ED9               	movwf	fsr2l,c
   939  01FE3E  0E00               	movlw	high _Board_High
   940  01FE40  2002               	addwfc	?___wmul+1,w,c
   941  01FE42  6EDA               	movwf	fsr2h,c
   942  01FE44  CFDE F007          	movff	postinc2,LED_Value@high
   943  01FE48  CFDD F008          	movff	postdec2,LED_Value@high+1
   944  01FE4C  C014  F001         	movff	_board,___wmul@multiplier
   945  01FE50  C015  F002         	movff	_board+1,___wmul@multiplier+1
   946  01FE54  0E00               	movlw	0
   947  01FE56  6E04               	movwf	___wmul@multiplicand+1,c
   948  01FE58  0E1A               	movlw	26
   949  01FE5A  6E03               	movwf	___wmul@multiplicand,c
   950  01FE5C  EC2B  F0FB         	call	___wmul	;wreg free
   951  01FE60  0E12               	movlw	18
   952  01FE62  2601               	addwf	?___wmul,f,c
   953  01FE64  0E00               	movlw	0
   954  01FE66  2202               	addwfc	?___wmul+1,f,c
   955  01FE68  0E60               	movlw	low _Board_Low
   956  01FE6A  2401               	addwf	?___wmul,w,c
   957  01FE6C  6ED9               	movwf	fsr2l,c
   958  01FE6E  0E00               	movlw	high _Board_Low
   959  01FE70  2002               	addwfc	?___wmul+1,w,c
   960  01FE72  6EDA               	movwf	fsr2h,c
   961  01FE74  CFDE F009          	movff	postinc2,LED_Value@low
   962  01FE78  CFDD F00A          	movff	postdec2,LED_Value@low+1
   963  01FE7C  0E21               	movlw	33
   964  01FE7E  6E0B               	movwf	LED_Value@channel,c
   965  01FE80  EC8B  F0FB         	call	_LED_Value	;wreg free
   966  01FE84  6E0D               	movwf	??_main& (0+255),c
   967  01FE86  3A0D               	swapf	??_main,f,c
   968  01FE88  460D               	rlncf	??_main,f,c
   969  01FE8A  460D               	rlncf	??_main,f,c
   970  01FE8C  5085               	movf	3973,w,c	;volatile
   971  01FE8E  180D               	xorwf	??_main,w,c
   972  01FE90  0BBF               	andlw	-65
   973  01FE92  180D               	xorwf	??_main,w,c
   974  01FE94  6E85               	movwf	3973,c	;volatile
   975                           
   976                           ;main.c: 133: LATCbits.LATC5 = LED_Value(Board_High[board][10],Board_Low[board][10],ANE0
      +                          );
   977  01FE96  C014  F001         	movff	_board,___wmul@multiplier
   978  01FE9A  C015  F002         	movff	_board+1,___wmul@multiplier+1
   979  01FE9E  0E00               	movlw	0
   980  01FEA0  6E04               	movwf	___wmul@multiplicand+1,c
   981  01FEA2  0E1A               	movlw	26
   982  01FEA4  6E03               	movwf	___wmul@multiplicand,c
   983  01FEA6  EC2B  F0FB         	call	___wmul	;wreg free
   984  01FEAA  0E14               	movlw	20
   985  01FEAC  2601               	addwf	?___wmul,f,c
   986  01FEAE  0E00               	movlw	0
   987  01FEB0  2202               	addwfc	?___wmul+1,f,c
   988  01FEB2  0EAE               	movlw	low _Board_High
   989  01FEB4  2401               	addwf	?___wmul,w,c
   990  01FEB6  6ED9               	movwf	fsr2l,c
   991  01FEB8  0E00               	movlw	high _Board_High
   992  01FEBA  2002               	addwfc	?___wmul+1,w,c
   993  01FEBC  6EDA               	movwf	fsr2h,c
   994  01FEBE  CFDE F007          	movff	postinc2,LED_Value@high
   995  01FEC2  CFDD F008          	movff	postdec2,LED_Value@high+1
   996  01FEC6  C014  F001         	movff	_board,___wmul@multiplier
   997  01FECA  C015  F002         	movff	_board+1,___wmul@multiplier+1
   998  01FECE  0E00               	movlw	0
   999  01FED0  6E04               	movwf	___wmul@multiplicand+1,c
  1000  01FED2  0E1A               	movlw	26
  1001  01FED4  6E03               	movwf	___wmul@multiplicand,c
  1002  01FED6  EC2B  F0FB         	call	___wmul	;wreg free
  1003  01FEDA  0E14               	movlw	20
  1004  01FEDC  2601               	addwf	?___wmul,f,c
  1005  01FEDE  0E00               	movlw	0
  1006  01FEE0  2202               	addwfc	?___wmul+1,f,c
  1007  01FEE2  0E60               	movlw	low _Board_Low
  1008  01FEE4  2401               	addwf	?___wmul,w,c
  1009  01FEE6  6ED9               	movwf	fsr2l,c
  1010  01FEE8  0E00               	movlw	high _Board_Low
  1011  01FEEA  2002               	addwfc	?___wmul+1,w,c
  1012  01FEEC  6EDA               	movwf	fsr2h,c
  1013  01FEEE  CFDE F009          	movff	postinc2,LED_Value@low
  1014  01FEF2  CFDD F00A          	movff	postdec2,LED_Value@low+1
  1015  01FEF6  0E20               	movlw	32
  1016  01FEF8  6E0B               	movwf	LED_Value@channel,c
  1017  01FEFA  EC8B  F0FB         	call	_LED_Value	;wreg free
  1018  01FEFE  6E0D               	movwf	??_main& (0+255),c
  1019  01FF00  3A0D               	swapf	??_main,f,c
  1020  01FF02  460D               	rlncf	??_main,f,c
  1021  01FF04  5085               	movf	3973,w,c	;volatile
  1022  01FF06  180D               	xorwf	??_main,w,c
  1023  01FF08  0BDF               	andlw	-33
  1024  01FF0A  180D               	xorwf	??_main,w,c
  1025  01FF0C  6E85               	movwf	3973,c	;volatile
  1026                           
  1027                           ;main.c: 134: LATCbits.LATC4 = LED_Value(Board_High[board][11],Board_Low[board][11],ANA5
      +                          );
  1028  01FF0E  C014  F001         	movff	_board,___wmul@multiplier
  1029  01FF12  C015  F002         	movff	_board+1,___wmul@multiplier+1
  1030  01FF16  0E00               	movlw	0
  1031  01FF18  6E04               	movwf	___wmul@multiplicand+1,c
  1032  01FF1A  0E1A               	movlw	26
  1033  01FF1C  6E03               	movwf	___wmul@multiplicand,c
  1034  01FF1E  EC2B  F0FB         	call	___wmul	;wreg free
  1035  01FF22  0E16               	movlw	22
  1036  01FF24  2601               	addwf	?___wmul,f,c
  1037  01FF26  0E00               	movlw	0
  1038  01FF28  2202               	addwfc	?___wmul+1,f,c
  1039  01FF2A  0EAE               	movlw	low _Board_High
  1040  01FF2C  2401               	addwf	?___wmul,w,c
  1041  01FF2E  6ED9               	movwf	fsr2l,c
  1042  01FF30  0E00               	movlw	high _Board_High
  1043  01FF32  2002               	addwfc	?___wmul+1,w,c
  1044  01FF34  6EDA               	movwf	fsr2h,c
  1045  01FF36  CFDE F007          	movff	postinc2,LED_Value@high
  1046  01FF3A  CFDD F008          	movff	postdec2,LED_Value@high+1
  1047  01FF3E  C014  F001         	movff	_board,___wmul@multiplier
  1048  01FF42  C015  F002         	movff	_board+1,___wmul@multiplier+1
  1049  01FF46  0E00               	movlw	0
  1050  01FF48  6E04               	movwf	___wmul@multiplicand+1,c
  1051  01FF4A  0E1A               	movlw	26
  1052  01FF4C  6E03               	movwf	___wmul@multiplicand,c
  1053  01FF4E  EC2B  F0FB         	call	___wmul	;wreg free
  1054  01FF52  0E16               	movlw	22
  1055  01FF54  2601               	addwf	?___wmul,f,c
  1056  01FF56  0E00               	movlw	0
  1057  01FF58  2202               	addwfc	?___wmul+1,f,c
  1058  01FF5A  0E60               	movlw	low _Board_Low
  1059  01FF5C  2401               	addwf	?___wmul,w,c
  1060  01FF5E  6ED9               	movwf	fsr2l,c
  1061  01FF60  0E00               	movlw	high _Board_Low
  1062  01FF62  2002               	addwfc	?___wmul+1,w,c
  1063  01FF64  6EDA               	movwf	fsr2h,c
  1064  01FF66  CFDE F009          	movff	postinc2,LED_Value@low
  1065  01FF6A  CFDD F00A          	movff	postdec2,LED_Value@low+1
  1066  01FF6E  0E05               	movlw	5
  1067  01FF70  6E0B               	movwf	LED_Value@channel,c
  1068  01FF72  EC8B  F0FB         	call	_LED_Value	;wreg free
  1069  01FF76  6E0D               	movwf	??_main& (0+255),c
  1070  01FF78  3A0D               	swapf	??_main,f,c
  1071  01FF7A  5085               	movf	3973,w,c	;volatile
  1072  01FF7C  180D               	xorwf	??_main,w,c
  1073  01FF7E  0BEF               	andlw	-17
  1074  01FF80  180D               	xorwf	??_main,w,c
  1075  01FF82  6E85               	movwf	3973,c	;volatile
  1076                           
  1077                           ;main.c: 135: LATDbits.LATD3 = LED_Value(Board_High[board][12],Board_Low[board][12],ANA4
      +                          );
  1078  01FF84  C014  F001         	movff	_board,___wmul@multiplier
  1079  01FF88  C015  F002         	movff	_board+1,___wmul@multiplier+1
  1080  01FF8C  0E00               	movlw	0
  1081  01FF8E  6E04               	movwf	___wmul@multiplicand+1,c
  1082  01FF90  0E1A               	movlw	26
  1083  01FF92  6E03               	movwf	___wmul@multiplicand,c
  1084  01FF94  EC2B  F0FB         	call	___wmul	;wreg free
  1085  01FF98  0E18               	movlw	24
  1086  01FF9A  2601               	addwf	?___wmul,f,c
  1087  01FF9C  0E00               	movlw	0
  1088  01FF9E  2202               	addwfc	?___wmul+1,f,c
  1089  01FFA0  0EAE               	movlw	low _Board_High
  1090  01FFA2  2401               	addwf	?___wmul,w,c
  1091  01FFA4  6ED9               	movwf	fsr2l,c
  1092  01FFA6  0E00               	movlw	high _Board_High
  1093  01FFA8  2002               	addwfc	?___wmul+1,w,c
  1094  01FFAA  6EDA               	movwf	fsr2h,c
  1095  01FFAC  CFDE F007          	movff	postinc2,LED_Value@high
  1096  01FFB0  CFDD F008          	movff	postdec2,LED_Value@high+1
  1097  01FFB4  C014  F001         	movff	_board,___wmul@multiplier
  1098  01FFB8  C015  F002         	movff	_board+1,___wmul@multiplier+1
  1099  01FFBC  0E00               	movlw	0
  1100  01FFBE  6E04               	movwf	___wmul@multiplicand+1,c
  1101  01FFC0  0E1A               	movlw	26
  1102  01FFC2  6E03               	movwf	___wmul@multiplicand,c
  1103  01FFC4  EC2B  F0FB         	call	___wmul	;wreg free
  1104  01FFC8  0E18               	movlw	24
  1105  01FFCA  2601               	addwf	?___wmul,f,c
  1106  01FFCC  0E00               	movlw	0
  1107  01FFCE  2202               	addwfc	?___wmul+1,f,c
  1108  01FFD0  0E60               	movlw	low _Board_Low
  1109  01FFD2  2401               	addwf	?___wmul,w,c
  1110  01FFD4  6ED9               	movwf	fsr2l,c
  1111  01FFD6  0E00               	movlw	high _Board_Low
  1112  01FFD8  2002               	addwfc	?___wmul+1,w,c
  1113  01FFDA  6EDA               	movwf	fsr2h,c
  1114  01FFDC  CFDE F009          	movff	postinc2,LED_Value@low
  1115  01FFE0  CFDD F00A          	movff	postdec2,LED_Value@low+1
  1116  01FFE4  0E04               	movlw	4
  1117  01FFE6  6E0B               	movwf	LED_Value@channel,c
  1118  01FFE8  EC8B  F0FB         	call	_LED_Value	;wreg free
  1119  01FFEC  6E0D               	movwf	??_main& (0+255),c
  1120  01FFEE  460D               	rlncf	??_main,f,c
  1121  01FFF0  460D               	rlncf	??_main,f,c
  1122  01FFF2  460D               	rlncf	??_main,f,c
  1123  01FFF4  5086               	movf	3974,w,c	;volatile
  1124  01FFF6  180D               	xorwf	??_main,w,c
  1125  01FFF8  0BF7               	andlw	-9
  1126  01FFFA  180D               	xorwf	??_main,w,c
  1127  01FFFC  6E86               	movwf	3974,c	;volatile
  1128  01FFFE  D4F8               	goto	l322
  1129  020000                     __end_of_main:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           postdec1	equ	0xFE5
  1138                           fsr1l	equ	0xFE1
  1139                           postinc2	equ	0xFDE
  1140                           postdec2	equ	0xFDD
  1141                           fsr2h	equ	0xFDA
  1142                           fsr2l	equ	0xFD9
  1143                           
  1144 ;; *************** function ___wmul *****************
  1145 ;; Defined at:
  1146 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  multiplier      2    0[COMRAM] unsigned int 
  1149 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  product         2    4[COMRAM] unsigned int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2    0[COMRAM] unsigned int 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, prodl, prodh
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1165 ;;Total ram usage:        6 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text1
  1175  01F656                     __ptext1:
  1176                           	opt stack 0
  1177  01F656                     ___wmul:
  1178                           	opt stack 30
  1179                           
  1180                           ;incstack = 0
  1181  01F656  5001               	movf	___wmul@multiplier,w,c
  1182  01F658  0203               	mulwf	___wmul@multiplicand,c
  1183  01F65A  CFF3 F005          	movff	prodl,___wmul@product
  1184  01F65E  CFF4 F006          	movff	prodh,___wmul@product+1
  1185  01F662  5001               	movf	___wmul@multiplier,w,c
  1186  01F664  0204               	mulwf	___wmul@multiplicand+1,c
  1187  01F666  50F3               	movf	prodl,w,c
  1188  01F668  2606               	addwf	___wmul@product+1,f,c
  1189  01F66A  5002               	movf	___wmul@multiplier+1,w,c
  1190  01F66C  0203               	mulwf	___wmul@multiplicand,c
  1191  01F66E  50F3               	movf	prodl,w,c
  1192  01F670  2606               	addwf	___wmul@product+1,f,c
  1193  01F672  C005  F001         	movff	___wmul@product,?___wmul
  1194  01F676  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1195  01F67A  0012               	return	
  1196  01F67C                     __end_of___wmul:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodh	equ	0xFF4
  1203                           prodl	equ	0xFF3
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           postinc2	equ	0xFDE
  1209                           postdec2	equ	0xFDD
  1210                           fsr2h	equ	0xFDA
  1211                           fsr2l	equ	0xFD9
  1212                           
  1213 ;; *************** function _SYSTEM_Initialize *****************
  1214 ;; Defined at:
  1215 ;;		line 115 in file "mcc_generated_files/mcc.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    1
  1236 ;; This function calls:
  1237 ;;		_ADCC_Initialize
  1238 ;;		_OSCILLATOR_Initialize
  1239 ;;		_PIN_MANAGER_Initialize
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text2
  1246  01F61C                     __ptext2:
  1247                           	opt stack 0
  1248  01F61C                     _SYSTEM_Initialize:
  1249                           	opt stack 29
  1250                           
  1251                           ;mcc.c: 118: PIN_MANAGER_Initialize();
  1252                           
  1253                           ;incstack = 0
  1254  01F61C  ECEF  F0FB         	call	_PIN_MANAGER_Initialize	;wreg free
  1255                           
  1256                           ;mcc.c: 119: OSCILLATOR_Initialize();
  1257  01F620  EC1F  F0FB         	call	_OSCILLATOR_Initialize	;wreg free
  1258                           
  1259                           ;mcc.c: 120: ADCC_Initialize();
  1260  01F624  EC63  F0FB         	call	_ADCC_Initialize	;wreg free
  1261  01F628  0012               	return		;funcret
  1262  01F62A                     __end_of_SYSTEM_Initialize:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           prodh	equ	0xFF4
  1269                           prodl	equ	0xFF3
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           postinc2	equ	0xFDE
  1275                           postdec2	equ	0xFDD
  1276                           fsr2h	equ	0xFDA
  1277                           fsr2l	equ	0xFD9
  1278                           
  1279 ;; *************** function _PIN_MANAGER_Initialize *****************
  1280 ;; Defined at:
  1281 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  state           1    0[COMRAM] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_SYSTEM_Initialize
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text3
  1309  01F7DE                     __ptext3:
  1310                           	opt stack 0
  1311  01F7DE                     _PIN_MANAGER_Initialize:
  1312                           	opt stack 29
  1313                           
  1314                           ;pin_manager.c: 57: LATE = 0x00;
  1315                           
  1316                           ;incstack = 0
  1317  01F7DE  0E00               	movlw	0
  1318  01F7E0  6E87               	movwf	3975,c	;volatile
  1319                           
  1320                           ;pin_manager.c: 58: LATD = 0x00;
  1321  01F7E2  0E00               	movlw	0
  1322  01F7E4  6E86               	movwf	3974,c	;volatile
  1323                           
  1324                           ;pin_manager.c: 59: LATA = 0x00;
  1325  01F7E6  0E00               	movlw	0
  1326  01F7E8  6E83               	movwf	3971,c	;volatile
  1327                           
  1328                           ;pin_manager.c: 60: LATB = 0x00;
  1329  01F7EA  0E00               	movlw	0
  1330  01F7EC  6E84               	movwf	3972,c	;volatile
  1331                           
  1332                           ;pin_manager.c: 61: LATC = 0x00;
  1333  01F7EE  0E00               	movlw	0
  1334  01F7F0  6E85               	movwf	3973,c	;volatile
  1335                           
  1336                           ;pin_manager.c: 66: TRISE = 0x07;
  1337  01F7F2  0E07               	movlw	7
  1338  01F7F4  6E8C               	movwf	3980,c	;volatile
  1339                           
  1340                           ;pin_manager.c: 67: TRISA = 0xFF;
  1341  01F7F6  6888               	setf	3976,c	;volatile
  1342                           
  1343                           ;pin_manager.c: 68: TRISB = 0xF0;
  1344  01F7F8  0EF0               	movlw	240
  1345  01F7FA  6E89               	movwf	3977,c	;volatile
  1346                           
  1347                           ;pin_manager.c: 69: TRISC = 0x0F;
  1348  01F7FC  0E0F               	movlw	15
  1349  01F7FE  6E8A               	movwf	3978,c	;volatile
  1350                           
  1351                           ;pin_manager.c: 70: TRISD = 0x03;
  1352  01F800  0E03               	movlw	3
  1353  01F802  6E8B               	movwf	3979,c	;volatile
  1354                           
  1355                           ;pin_manager.c: 75: ANSELC = 0x0F;
  1356  01F804  0E0F               	movlw	15
  1357  01F806  010F               	movlb	15	; () banked
  1358  01F808  6F21               	movwf	33,b	;volatile
  1359                           
  1360                           ;pin_manager.c: 76: ANSELB = 0xE0;
  1361  01F80A  0EE0               	movlw	224
  1362  01F80C  6F19               	movwf	25,b	;volatile
  1363                           
  1364                           ;pin_manager.c: 77: ANSELD = 0x03;
  1365  01F80E  0E03               	movlw	3
  1366  01F810  6F26               	movwf	38,b	;volatile
  1367                           
  1368                           ;pin_manager.c: 78: ANSELE = 0x07;
  1369  01F812  0E07               	movlw	7
  1370  01F814  6F2E               	movwf	46,b	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;pin_manager.c: 79: ANSELA = 0xFF;
  1374  01F816  6911               	setf	17,b	;volatile
  1375                           
  1376                           ;pin_manager.c: 84: WPUD = 0x00;
  1377  01F818  0E00               	movlw	0
  1378  01F81A  6F25               	movwf	37,b	;volatile
  1379                           
  1380                           ;pin_manager.c: 85: WPUE = 0x00;
  1381  01F81C  0E00               	movlw	0
  1382  01F81E  6F2D               	movwf	45,b	;volatile
  1383                           
  1384                           ;pin_manager.c: 86: WPUB = 0x00;
  1385  01F820  0E00               	movlw	0
  1386  01F822  6F18               	movwf	24,b	;volatile
  1387                           
  1388                           ;pin_manager.c: 87: WPUA = 0x00;
  1389  01F824  0E00               	movlw	0
  1390  01F826  6F10               	movwf	16,b	;volatile
  1391                           
  1392                           ;pin_manager.c: 88: WPUC = 0x00;
  1393  01F828  0E00               	movlw	0
  1394  01F82A  6F20               	movwf	32,b	;volatile
  1395                           
  1396                           ;pin_manager.c: 93: ODCONE = 0x00;
  1397  01F82C  0E00               	movlw	0
  1398  01F82E  6F2C               	movwf	44,b	;volatile
  1399                           
  1400                           ;pin_manager.c: 94: ODCONA = 0x00;
  1401  01F830  0E00               	movlw	0
  1402  01F832  6F0F               	movwf	15,b	;volatile
  1403                           
  1404                           ;pin_manager.c: 95: ODCONB = 0x00;
  1405  01F834  0E00               	movlw	0
  1406  01F836  6F17               	movwf	23,b	;volatile
  1407                           
  1408                           ;pin_manager.c: 96: ODCONC = 0x00;
  1409  01F838  0E00               	movlw	0
  1410  01F83A  6F1F               	movwf	31,b	;volatile
  1411                           
  1412                           ;pin_manager.c: 97: ODCOND = 0x00;
  1413  01F83C  0E00               	movlw	0
  1414  01F83E  6F24               	movwf	36,b	;volatile
  1415                           
  1416                           ;pin_manager.c: 104: bool state = (unsigned char)GIE;
  1417  01F840  0E00               	movlw	0
  1418  01F842  BEF2               	btfsc	intcon,7,c	;volatile
  1419  01F844  0E01               	movlw	1
  1420  01F846  6E01               	movwf	PIN_MANAGER_Initialize@state,c
  1421                           
  1422                           ; BSR set to: 15
  1423                           ;pin_manager.c: 105: GIE = 0;
  1424  01F848  9EF2               	bcf	intcon,7,c	;volatile
  1425                           
  1426                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  1427  01F84A  0E55               	movlw	85
  1428  01F84C  010E               	movlb	14	; () banked
  1429  01F84E  6FA0               	movwf	160,b	;volsfr
  1430                           
  1431                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  1432  01F850  0EAA               	movlw	170
  1433  01F852  6FA0               	movwf	160,b	;volsfr
  1434                           
  1435                           ; BSR set to: 14
  1436                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x00;
  1437  01F854  91A0               	bcf	160,0,b	;volsfr
  1438                           
  1439                           ; BSR set to: 14
  1440                           ;pin_manager.c: 110: ADACTPPSbits.ADACTPPS = 0x0C;
  1441  01F856  91AE               	bcf	174,0,b	;volatile
  1442  01F858  93AE               	bcf	174,1,b	;volatile
  1443  01F85A  85AE               	bsf	174,2,b	;volatile
  1444  01F85C  87AE               	bsf	174,3,b	;volatile
  1445  01F85E  99AE               	bcf	174,4,b	;volatile
  1446                           
  1447                           ;pin_manager.c: 112: PPSLOCK = 0x55;
  1448  01F860  0E55               	movlw	85
  1449  01F862  6FA0               	movwf	160,b	;volsfr
  1450                           
  1451                           ;pin_manager.c: 113: PPSLOCK = 0xAA;
  1452  01F864  0EAA               	movlw	170
  1453  01F866  6FA0               	movwf	160,b	;volsfr
  1454                           
  1455                           ; BSR set to: 14
  1456                           ;pin_manager.c: 114: PPSLOCKbits.PPSLOCKED = 0x01;
  1457  01F868  81A0               	bsf	160,0,b	;volsfr
  1458                           
  1459                           ; BSR set to: 14
  1460                           ;pin_manager.c: 116: GIE = state;
  1461  01F86A  A001               	btfss	PIN_MANAGER_Initialize@state,0,c
  1462  01F86C  D002               	goto	u220
  1463  01F86E  8EF2               	bsf	intcon,7,c	;volatile
  1464  01F870  0012               	return	
  1465  01F872                     u220:
  1466  01F872  9EF2               	bcf	intcon,7,c	;volatile
  1467  01F874  0012               	return		;funcret
  1468  01F876                     __end_of_PIN_MANAGER_Initialize:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           prodh	equ	0xFF4
  1475                           prodl	equ	0xFF3
  1476                           intcon	equ	0xFF2
  1477                           postinc0	equ	0xFEE
  1478                           wreg	equ	0xFE8
  1479                           postdec1	equ	0xFE5
  1480                           fsr1l	equ	0xFE1
  1481                           postinc2	equ	0xFDE
  1482                           postdec2	equ	0xFDD
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           
  1486 ;; *************** function _OSCILLATOR_Initialize *****************
  1487 ;; Defined at:
  1488 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_SYSTEM_Initialize
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text4
  1516  01F63E                     __ptext4:
  1517                           	opt stack 0
  1518  01F63E                     _OSCILLATOR_Initialize:
  1519                           	opt stack 29
  1520                           
  1521                           ;mcc.c: 126: OSCCON1 = 0x70;
  1522                           
  1523                           ;incstack = 0
  1524  01F63E  0E70               	movlw	112
  1525  01F640  010E               	movlb	14	; () banked
  1526  01F642  6FD8               	movwf	216,b	;volatile
  1527                           
  1528                           ;mcc.c: 128: OSCCON3 = 0x00;
  1529  01F644  0E00               	movlw	0
  1530  01F646  6FDA               	movwf	218,b	;volatile
  1531                           
  1532                           ;mcc.c: 130: OSCEN = 0x00;
  1533  01F648  0E00               	movlw	0
  1534  01F64A  6FDC               	movwf	220,b	;volatile
  1535                           
  1536                           ;mcc.c: 132: OSCFRQ = 0x02;
  1537  01F64C  0E02               	movlw	2
  1538  01F64E  6FDE               	movwf	222,b	;volatile
  1539                           
  1540                           ;mcc.c: 134: OSCTUNE = 0x00;
  1541  01F650  0E00               	movlw	0
  1542  01F652  6FDD               	movwf	221,b	;volatile
  1543                           
  1544                           ; BSR set to: 14
  1545  01F654  0012               	return		;funcret
  1546  01F656                     __end_of_OSCILLATOR_Initialize:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           prodh	equ	0xFF4
  1553                           prodl	equ	0xFF3
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           postinc2	equ	0xFDE
  1560                           postdec2	equ	0xFDD
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           
  1564 ;; *************** function _ADCC_Initialize *****************
  1565 ;; Defined at:
  1566 ;;		line 61 in file "mcc_generated_files/adcc.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_SYSTEM_Initialize
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text5
  1595  01F6C6                     __ptext5:
  1596                           	opt stack 0
  1597  01F6C6                     _ADCC_Initialize:
  1598                           	opt stack 29
  1599                           
  1600                           ;adcc.c: 65: ADCON1 = 0x00;
  1601                           
  1602                           ; BSR set to: 14
  1603                           ;incstack = 0
  1604  01F6C6  0E00               	movlw	0
  1605  01F6C8  010F               	movlb	15	; () banked
  1606  01F6CA  6F59               	movwf	89,b	;volatile
  1607                           
  1608                           ;adcc.c: 67: ADCON2 = 0x00;
  1609  01F6CC  0E00               	movlw	0
  1610  01F6CE  6F5A               	movwf	90,b	;volatile
  1611                           
  1612                           ;adcc.c: 69: ADCON3 = 0x00;
  1613  01F6D0  0E00               	movlw	0
  1614  01F6D2  6F5B               	movwf	91,b	;volatile
  1615                           
  1616                           ;adcc.c: 71: ADACT = 0x00;
  1617  01F6D4  0E00               	movlw	0
  1618  01F6D6  6F56               	movwf	86,b	;volatile
  1619                           
  1620                           ;adcc.c: 73: ADSTAT = 0x00;
  1621  01F6D8  0E00               	movlw	0
  1622  01F6DA  6E65               	movwf	3941,c	;volatile
  1623                           
  1624                           ;adcc.c: 75: ADCLK = 0x00;
  1625  01F6DC  0E00               	movlw	0
  1626  01F6DE  6F57               	movwf	87,b	;volatile
  1627                           
  1628                           ;adcc.c: 77: ADREF = 0x12;
  1629  01F6E0  0E12               	movlw	18
  1630  01F6E2  6F58               	movwf	88,b	;volatile
  1631                           
  1632                           ;adcc.c: 79: ADCAP = 0x00;
  1633  01F6E4  0E00               	movlw	0
  1634  01F6E6  6F5D               	movwf	93,b	;volatile
  1635                           
  1636                           ;adcc.c: 81: ADPRE = 0x00;
  1637  01F6E8  0E00               	movlw	0
  1638  01F6EA  6F5E               	movwf	94,b	;volatile
  1639                           
  1640                           ;adcc.c: 83: ADACQ = 0x00;
  1641  01F6EC  0E00               	movlw	0
  1642  01F6EE  6F5C               	movwf	92,b	;volatile
  1643                           
  1644                           ;adcc.c: 85: ADPCH = 0x00;
  1645  01F6F0  0E00               	movlw	0
  1646  01F6F2  6F5F               	movwf	95,b	;volatile
  1647                           
  1648                           ;adcc.c: 87: ADRPT = 0x00;
  1649  01F6F4  0E00               	movlw	0
  1650  01F6F6  6E66               	movwf	3942,c	;volatile
  1651                           
  1652                           ;adcc.c: 89: ADLTHL = 0x00;
  1653  01F6F8  0E00               	movlw	0
  1654  01F6FA  6E6A               	movwf	3946,c	;volatile
  1655                           
  1656                           ;adcc.c: 91: ADLTHH = 0x00;
  1657  01F6FC  0E00               	movlw	0
  1658  01F6FE  6E6B               	movwf	3947,c	;volatile
  1659                           
  1660                           ;adcc.c: 93: ADUTHL = 0x00;
  1661  01F700  0E00               	movlw	0
  1662  01F702  6E6C               	movwf	3948,c	;volatile
  1663                           
  1664                           ;adcc.c: 95: ADUTHH = 0x00;
  1665  01F704  0E00               	movlw	0
  1666  01F706  6E6D               	movwf	3949,c	;volatile
  1667                           
  1668                           ;adcc.c: 97: ADSTPTL = 0x00;
  1669  01F708  0E00               	movlw	0
  1670  01F70A  6E68               	movwf	3944,c	;volatile
  1671                           
  1672                           ;adcc.c: 99: ADSTPTH = 0x00;
  1673  01F70C  0E00               	movlw	0
  1674  01F70E  6E69               	movwf	3945,c	;volatile
  1675                           
  1676                           ;adcc.c: 102: ADCON0 = 0x94;
  1677  01F710  0E94               	movlw	148
  1678  01F712  6E60               	movwf	3936,c	;volatile
  1679                           
  1680                           ; BSR set to: 15
  1681  01F714  0012               	return		;funcret
  1682  01F716                     __end_of_ADCC_Initialize:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1l	equ	0xFE1
  1695                           postinc2	equ	0xFDE
  1696                           postdec2	equ	0xFDD
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           
  1700 ;; *************** function _LED_Value *****************
  1701 ;; Defined at:
  1702 ;;		line 45 in file "main.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  high            2    6[COMRAM] int 
  1705 ;;  low             2    8[COMRAM] int 
  1706 ;;  channel         1   10[COMRAM] enum E11635
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1718 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;Total ram usage:        6 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    1
  1725 ;; This function calls:
  1726 ;;		_ADCC_GetConversionResult
  1727 ;;		_ADCC_IsConversionDone
  1728 ;;		_ADCC_StartConversion
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text6
  1735  01F716                     __ptext6:
  1736                           	opt stack 0
  1737  01F716                     _LED_Value:
  1738                           	opt stack 29
  1739                           
  1740                           ;main.c: 47: ADCC_StartConversion(channel);
  1741                           
  1742                           ; BSR set to: 15
  1743                           ;incstack = 0
  1744  01F716  500B               	movf	LED_Value@channel,w,c
  1745  01F718  EC08  F0FB         	call	_ADCC_StartConversion
  1746  01F71C  EC02  F0FB         	call	_ADCC_IsConversionDone	;wreg free
  1747  01F720  0900               	iorlw	0
  1748  01F722  B4D8               	btfsc	status,2,c
  1749  01F724  D7FB               	goto	l305
  1750                           
  1751                           ;main.c: 50: result = ADCC_GetConversionResult();
  1752  01F726  EC15  F0FB         	call	_ADCC_GetConversionResult	;wreg free
  1753  01F72A  C001  F012         	movff	?_ADCC_GetConversionResult,_result
  1754  01F72E  C002  F013         	movff	?_ADCC_GetConversionResult+1,_result+1
  1755                           
  1756                           ;main.c: 52: if(result >= low && result <= high)
  1757  01F732  5009               	movf	LED_Value@low,w,c
  1758  01F734  5C12               	subwf	_result,w,c
  1759  01F736  5013               	movf	_result+1,w,c
  1760  01F738  0A80               	xorlw	128
  1761  01F73A  6E0C               	movwf	??_LED_Value& (0+255),c
  1762  01F73C  500A               	movf	LED_Value@low+1,w,c
  1763  01F73E  0A80               	xorlw	128
  1764  01F740  580C               	subwfb	??_LED_Value& (0+255),w,c
  1765  01F742  A0D8               	btfss	status,0,c
  1766  01F744  D00F               	goto	l307
  1767  01F746  5012               	movf	_result,w,c
  1768  01F748  5C07               	subwf	LED_Value@high,w,c
  1769  01F74A  5008               	movf	LED_Value@high+1,w,c
  1770  01F74C  0A80               	xorlw	128
  1771  01F74E  6E0C               	movwf	??_LED_Value& (0+255),c
  1772  01F750  5013               	movf	_result+1,w,c
  1773  01F752  0A80               	xorlw	128
  1774  01F754  580C               	subwfb	??_LED_Value& (0+255),w,c
  1775  01F756  A0D8               	btfss	status,0,c
  1776  01F758  D005               	goto	l307
  1777                           
  1778                           ;main.c: 53: light = green;
  1779  01F75A  C00E  F010         	movff	_green,_light
  1780  01F75E  C00F  F011         	movff	_green+1,_light+1
  1781  01F762  D004               	goto	l308
  1782  01F764                     l307:
  1783                           
  1784                           ;main.c: 54: else
  1785                           ;main.c: 55: light = red;
  1786  01F764  C018  F010         	movff	_red,_light
  1787  01F768  C019  F011         	movff	_red+1,_light+1
  1788  01F76C                     l308:
  1789                           
  1790                           ;main.c: 57: return light;
  1791  01F76C  5010               	movf	_light,w,c
  1792  01F76E  0012               	return	
  1793  01F770                     __end_of_LED_Value:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           postinc2	equ	0xFDE
  1807                           postdec2	equ	0xFDD
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _Board_Select_Value *****************
  1813 ;; Defined at:
  1814 ;;		line 19 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  2  286[None  ] int 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		_ADCC_GetConversionResult
  1837 ;;		_ADCC_IsConversionDone
  1838 ;;		_ADCC_StartConversion
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text7
  1845  01F912                     __ptext7:
  1846                           	opt stack 0
  1847  01F912                     _Board_Select_Value:
  1848                           	opt stack 29
  1849                           
  1850                           ;main.c: 21: TRISAbits.TRISA1 = 1;
  1851                           
  1852                           ;incstack = 0
  1853  01F912  8288               	bsf	3976,1,c	;volatile
  1854                           
  1855                           ;main.c: 22: do { ANSELAbits.ANSELA1 = 1; } while(0);
  1856  01F914  010F               	movlb	15	; () banked
  1857  01F916  8311               	bsf	17,1,b	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860                           ;main.c: 24: ADCC_StartConversion(Board_Select);
  1861                           
  1862                           ; BSR set to: 15
  1863  01F918  0E01               	movlw	1
  1864  01F91A  EC08  F0FB         	call	_ADCC_StartConversion
  1865  01F91E  EC02  F0FB         	call	_ADCC_IsConversionDone	;wreg free
  1866  01F922  0900               	iorlw	0
  1867  01F924  B4D8               	btfsc	status,2,c
  1868  01F926  D7FB               	goto	l290
  1869                           
  1870                           ;main.c: 27: board_select = ADCC_GetConversionResult();
  1871  01F928  EC15  F0FB         	call	_ADCC_GetConversionResult	;wreg free
  1872  01F92C  C001  F016         	movff	?_ADCC_GetConversionResult,_board_select
  1873  01F930  C002  F017         	movff	?_ADCC_GetConversionResult+1,_board_select+1
  1874                           
  1875                           ;main.c: 29: if(board_select >= 0xE1 && board_select <= 0xFC)
  1876  01F934  BE17               	btfsc	_board_select+1,7,c
  1877  01F936  D013               	goto	l292
  1878  01F938  5017               	movf	_board_select+1,w,c
  1879  01F93A  E104               	bnz	u250
  1880  01F93C  0EE1               	movlw	225
  1881  01F93E  5C16               	subwf	_board_select,w,c
  1882  01F940  A0D8               	btfss	status,0,c
  1883  01F942  D00D               	goto	l292
  1884  01F944                     u250:
  1885  01F944  BE17               	btfsc	_board_select+1,7,c
  1886  01F946  D006               	goto	u260
  1887  01F948  5017               	movf	_board_select+1,w,c
  1888  01F94A  E109               	bnz	l1205
  1889  01F94C  0EFD               	movlw	253
  1890  01F94E  5C16               	subwf	_board_select,w,c
  1891  01F950  B0D8               	btfsc	status,0,c
  1892  01F952  D005               	goto	l292
  1893  01F954                     u260:
  1894                           
  1895                           ;main.c: 30: board = 2;
  1896  01F954  0E00               	movlw	0
  1897  01F956  6E15               	movwf	_board+1,c
  1898  01F958  0E02               	movlw	2
  1899  01F95A  6E14               	movwf	_board,c
  1900  01F95C  0012               	return	
  1901  01F95E                     l292:
  1902  01F95E                     l1205:
  1903                           
  1904                           ;main.c: 31: else if(board_select >= 0x1DB && board_select <= 0x20D)
  1905  01F95E  BE17               	btfsc	_board_select+1,7,c
  1906  01F960  D013               	goto	l294
  1907  01F962  0EDB               	movlw	219
  1908  01F964  5C16               	subwf	_board_select,w,c
  1909  01F966  0E01               	movlw	1
  1910  01F968  5817               	subwfb	_board_select+1,w,c
  1911  01F96A  A0D8               	btfss	status,0,c
  1912  01F96C  D00D               	goto	l294
  1913  01F96E  BE17               	btfsc	_board_select+1,7,c
  1914  01F970  D006               	goto	u280
  1915  01F972  0E0E               	movlw	14
  1916  01F974  5C16               	subwf	_board_select,w,c
  1917  01F976  0E02               	movlw	2
  1918  01F978  5817               	subwfb	_board_select+1,w,c
  1919  01F97A  B0D8               	btfsc	status,0,c
  1920  01F97C  D005               	goto	l294
  1921  01F97E                     u280:
  1922                           
  1923                           ;main.c: 32: board = 1;
  1924  01F97E  0E00               	movlw	0
  1925  01F980  6E15               	movwf	_board+1,c
  1926  01F982  0E01               	movlw	1
  1927  01F984  6E14               	movwf	_board,c
  1928  01F986  0012               	return	
  1929  01F988                     l294:
  1930                           
  1931                           ;main.c: 33: else if(board_select >= 0x2D5 && board_select <= 0x307)
  1932  01F988  BE17               	btfsc	_board_select+1,7,c
  1933  01F98A  D013               	goto	l296
  1934  01F98C  0ED5               	movlw	213
  1935  01F98E  5C16               	subwf	_board_select,w,c
  1936  01F990  0E02               	movlw	2
  1937  01F992  5817               	subwfb	_board_select+1,w,c
  1938  01F994  A0D8               	btfss	status,0,c
  1939  01F996  D00D               	goto	l296
  1940  01F998  BE17               	btfsc	_board_select+1,7,c
  1941  01F99A  D006               	goto	u300
  1942  01F99C  0E08               	movlw	8
  1943  01F99E  5C16               	subwf	_board_select,w,c
  1944  01F9A0  0E03               	movlw	3
  1945  01F9A2  5817               	subwfb	_board_select+1,w,c
  1946  01F9A4  B0D8               	btfsc	status,0,c
  1947  01F9A6  D005               	goto	l296
  1948  01F9A8                     u300:
  1949                           
  1950                           ;main.c: 34: board = 0;
  1951  01F9A8  0E00               	movlw	0
  1952  01F9AA  6E15               	movwf	_board+1,c
  1953  01F9AC  0E00               	movlw	0
  1954  01F9AE  6E14               	movwf	_board,c
  1955  01F9B0  0012               	return	
  1956  01F9B2                     l296:
  1957                           
  1958                           ;main.c: 37: {
  1959                           ;main.c: 38: LATBbits.LATB3= ~LATBbits.LATB3;
  1960                           
  1961                           ;main.c: 35: else
  1962                           ;main.c: 36: while(1)
  1963  01F9B2  A684               	btfss	3972,3,c	;volatile
  1964  01F9B4  D002               	goto	u310
  1965  01F9B6  0E01               	movlw	1
  1966  01F9B8  D001               	goto	u316
  1967  01F9BA                     u310:
  1968  01F9BA  0E00               	movlw	0
  1969  01F9BC                     u316:
  1970  01F9BC  0AFF               	xorlw	255
  1971  01F9BE  6E05               	movwf	??_Board_Select_Value& (0+255),c
  1972  01F9C0  4605               	rlncf	??_Board_Select_Value,f,c
  1973  01F9C2  4605               	rlncf	??_Board_Select_Value,f,c
  1974  01F9C4  4605               	rlncf	??_Board_Select_Value,f,c
  1975  01F9C6  5084               	movf	3972,w,c	;volatile
  1976  01F9C8  1805               	xorwf	??_Board_Select_Value,w,c
  1977  01F9CA  0BF7               	andlw	-9
  1978  01F9CC  1805               	xorwf	??_Board_Select_Value,w,c
  1979  01F9CE  6E84               	movwf	3972,c	;volatile
  1980                           
  1981                           ;main.c: 39: _delay((unsigned long)((5000)*(1000000/4000.0)));
  1982  01F9D0  0E07               	movlw	7
  1983  01F9D2  6E06               	movwf	(??_Board_Select_Value+1)& (0+255),c
  1984  01F9D4  0E58               	movlw	88
  1985  01F9D6  6E05               	movwf	??_Board_Select_Value& (0+255),c
  1986  01F9D8  0E5A               	movlw	90
  1987  01F9DA                     u387:
  1988  01F9DA  2EE8               	decfsz	wreg,f,c
  1989  01F9DC  D7FE               	bra	u387
  1990  01F9DE  2E05               	decfsz	??_Board_Select_Value& (0+255),f,c
  1991  01F9E0  D7FC               	bra	u387
  1992  01F9E2  2E06               	decfsz	(??_Board_Select_Value+1)& (0+255),f,c
  1993  01F9E4  D7FA               	bra	u387
  1994  01F9E6  D7E5               	goto	l296
  1995  01F9E8                     __end_of_Board_Select_Value:
  1996                           	opt stack 0
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postdec1	equ	0xFE5
  2007                           fsr1l	equ	0xFE1
  2008                           postinc2	equ	0xFDE
  2009                           postdec2	equ	0xFDD
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014 ;; *************** function _ADCC_StartConversion *****************
  2015 ;; Defined at:
  2016 ;;		line 107 in file "mcc_generated_files/adcc.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  channel         1    wreg     enum E11631
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  channel         1    0[COMRAM] enum E11631
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;Total ram usage:        1 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_Board_Select_Value
  2040 ;;		_LED_Value
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text8
  2045  01F610                     __ptext8:
  2046                           	opt stack 0
  2047  01F610                     _ADCC_StartConversion:
  2048                           	opt stack 29
  2049                           
  2050                           ;incstack = 0
  2051                           ;ADCC_StartConversion@channel stored from wreg
  2052  01F610  6E01               	movwf	ADCC_StartConversion@channel,c
  2053                           
  2054                           ;adcc.c: 110: ADPCH = channel;
  2055  01F612  C001  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
  2056                           
  2057                           ;adcc.c: 113: ADCON0bits.ADON = 1;
  2058  01F616  8E60               	bsf	3936,7,c	;volatile
  2059                           
  2060                           ;adcc.c: 116: ADCON0bits.ADGO = 1;
  2061  01F618  8060               	bsf	3936,0,c	;volatile
  2062  01F61A  0012               	return		;funcret
  2063  01F61C                     __end_of_ADCC_StartConversion:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           postinc2	equ	0xFDE
  2077                           postdec2	equ	0xFDD
  2078                           fsr2h	equ	0xFDA
  2079                           fsr2l	equ	0xFD9
  2080                           status	equ	0xFD8
  2081                           
  2082 ;; *************** function _ADCC_IsConversionDone *****************
  2083 ;; Defined at:
  2084 ;;		line 119 in file "mcc_generated_files/adcc.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      unsigned char 
  2091 ;; Registers used:
  2092 ;;		wreg
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2102 ;;Total ram usage:        0 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_Board_Select_Value
  2108 ;;		_LED_Value
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text9
  2113  01F604                     __ptext9:
  2114                           	opt stack 0
  2115  01F604                     _ADCC_IsConversionDone:
  2116                           	opt stack 29
  2117                           
  2118                           ;adcc.c: 122: return ((unsigned char)(!ADCON0bits.ADGO));
  2119                           
  2120                           ;incstack = 0
  2121  01F604  B060               	btfsc	3936,0,c	;volatile
  2122  01F606  D002               	goto	u200
  2123  01F608  0E01               	movlw	1
  2124  01F60A  0012               	return	
  2125  01F60C                     u200:
  2126  01F60C  0E00               	movlw	0
  2127  01F60E  0012               	return	
  2128  01F610                     __end_of_ADCC_IsConversionDone:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           intcon	equ	0xFF2
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           postdec1	equ	0xFE5
  2140                           fsr1l	equ	0xFE1
  2141                           postinc2	equ	0xFDE
  2142                           postdec2	equ	0xFDD
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _ADCC_GetConversionResult *****************
  2148 ;; Defined at:
  2149 ;;		line 125 in file "mcc_generated_files/adcc.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2    0[COMRAM] unsigned int 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2166 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2167 ;;Total ram usage:        4 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_Board_Select_Value
  2173 ;;		_LED_Value
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text10
  2178  01F62A                     __ptext10:
  2179                           	opt stack 0
  2180  01F62A                     _ADCC_GetConversionResult:
  2181                           	opt stack 29
  2182                           
  2183                           ;adcc.c: 128: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2184                           
  2185                           ;incstack = 0
  2186  01F62A  5064               	movf	3940,w,c	;volatile
  2187  01F62C  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
  2188  01F62E  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
  2189  01F630  5063               	movf	3939,w,c	;volatile
  2190  01F632  2403               	addwf	??_ADCC_GetConversionResult,w,c
  2191  01F634  6E01               	movwf	?_ADCC_GetConversionResult,c
  2192  01F636  0E00               	movlw	0
  2193  01F638  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
  2194  01F63A  6E02               	movwf	?_ADCC_GetConversionResult+1,c
  2195  01F63C  0012               	return	
  2196  01F63E                     __end_of_ADCC_GetConversionResult:
  2197                           	opt stack 0
  2198                           tblptru	equ	0xFF8
  2199                           tblptrh	equ	0xFF7
  2200                           tblptrl	equ	0xFF6
  2201                           tablat	equ	0xFF5
  2202                           prodh	equ	0xFF4
  2203                           prodl	equ	0xFF3
  2204                           intcon	equ	0xFF2
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           postdec1	equ	0xFE5
  2208                           fsr1l	equ	0xFE1
  2209                           postinc2	equ	0xFDE
  2210                           postdec2	equ	0xFDD
  2211                           fsr2h	equ	0xFDA
  2212                           fsr2l	equ	0xFD9
  2213                           status	equ	0xFD8
  2214                           
  2215 ;; *************** function _Board_Init *****************
  2216 ;; Defined at:
  2217 ;;		line 60 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text11
  2245  01F770                     __ptext11:
  2246                           	opt stack 0
  2247  01F770                     _Board_Init:
  2248                           	opt stack 30
  2249                           
  2250                           ;main.c: 62: if(board == 2)
  2251                           
  2252                           ;incstack = 0
  2253  01F770  0E02               	movlw	2
  2254  01F772  1814               	xorwf	_board,w,c
  2255  01F774  1015               	iorwf	_board+1,w,c
  2256  01F776  A4D8               	btfss	status,2,c
  2257  01F778  D00E               	goto	l312
  2258                           
  2259                           ;main.c: 63: {
  2260                           ;main.c: 64: TRISBbits.TRISB3 = 0;
  2261  01F77A  9689               	bcf	3977,3,c	;volatile
  2262                           
  2263                           ;main.c: 65: TRISBbits.TRISB2 = 0;
  2264  01F77C  9489               	bcf	3977,2,c	;volatile
  2265                           
  2266                           ;main.c: 66: TRISBbits.TRISB1 = 0;
  2267  01F77E  9289               	bcf	3977,1,c	;volatile
  2268                           
  2269                           ;main.c: 67: TRISBbits.TRISB0 = 0;
  2270  01F780  9089               	bcf	3977,0,c	;volatile
  2271                           
  2272                           ;main.c: 68: TRISDbits.TRISD7 = 0;
  2273  01F782  9E8B               	bcf	3979,7,c	;volatile
  2274                           
  2275                           ;main.c: 69: TRISDbits.TRISD6 = 0;
  2276  01F784  9C8B               	bcf	3979,6,c	;volatile
  2277                           
  2278                           ;main.c: 70: TRISDbits.TRISD5 = 0;
  2279  01F786  9A8B               	bcf	3979,5,c	;volatile
  2280                           
  2281                           ;main.c: 71: TRISDbits.TRISD4 = 0;
  2282  01F788  988B               	bcf	3979,4,c	;volatile
  2283                           
  2284                           ;main.c: 72: TRISCbits.TRISC7 = 0;
  2285  01F78A  9E8A               	bcf	3978,7,c	;volatile
  2286                           
  2287                           ;main.c: 73: TRISCbits.TRISC6 = 0;
  2288  01F78C  9C8A               	bcf	3978,6,c	;volatile
  2289                           
  2290                           ;main.c: 74: TRISCbits.TRISC5 = 0;
  2291  01F78E  9A8A               	bcf	3978,5,c	;volatile
  2292                           
  2293                           ;main.c: 75: TRISCbits.TRISC4 = 0;
  2294  01F790  988A               	bcf	3978,4,c	;volatile
  2295                           
  2296                           ;main.c: 76: TRISDbits.TRISD3 = 0;
  2297  01F792  968B               	bcf	3979,3,c	;volatile
  2298                           
  2299                           ;main.c: 77: }
  2300  01F794  0012               	return	
  2301  01F796                     l312:
  2302                           
  2303                           ;main.c: 78: else if(board == 1)
  2304  01F796  0414               	decf	_board,w,c
  2305  01F798  1015               	iorwf	_board+1,w,c
  2306  01F79A  A4D8               	btfss	status,2,c
  2307  01F79C  D00E               	goto	l314
  2308                           
  2309                           ;main.c: 79: {
  2310                           ;main.c: 80: TRISBbits.TRISB3 = 1;
  2311  01F79E  8689               	bsf	3977,3,c	;volatile
  2312                           
  2313                           ;main.c: 81: TRISBbits.TRISB2 = 1;
  2314  01F7A0  8489               	bsf	3977,2,c	;volatile
  2315                           
  2316                           ;main.c: 82: TRISBbits.TRISB1 = 0;
  2317  01F7A2  9289               	bcf	3977,1,c	;volatile
  2318                           
  2319                           ;main.c: 83: TRISBbits.TRISB0 = 0;
  2320  01F7A4  9089               	bcf	3977,0,c	;volatile
  2321                           
  2322                           ;main.c: 84: TRISDbits.TRISD7 = 0;
  2323  01F7A6  9E8B               	bcf	3979,7,c	;volatile
  2324                           
  2325                           ;main.c: 85: TRISDbits.TRISD6 = 0;
  2326  01F7A8  9C8B               	bcf	3979,6,c	;volatile
  2327                           
  2328                           ;main.c: 86: TRISDbits.TRISD5 = 0;
  2329  01F7AA  9A8B               	bcf	3979,5,c	;volatile
  2330                           
  2331                           ;main.c: 87: TRISDbits.TRISD4 = 0;
  2332  01F7AC  988B               	bcf	3979,4,c	;volatile
  2333                           
  2334                           ;main.c: 88: TRISCbits.TRISC7 = 0;
  2335  01F7AE  9E8A               	bcf	3978,7,c	;volatile
  2336                           
  2337                           ;main.c: 89: TRISCbits.TRISC6 = 0;
  2338  01F7B0  9C8A               	bcf	3978,6,c	;volatile
  2339                           
  2340                           ;main.c: 90: TRISCbits.TRISC5 = 0;
  2341  01F7B2  9A8A               	bcf	3978,5,c	;volatile
  2342                           
  2343                           ;main.c: 91: TRISCbits.TRISC4 = 0;
  2344  01F7B4  988A               	bcf	3978,4,c	;volatile
  2345                           
  2346                           ;main.c: 92: TRISDbits.TRISD3 = 0;
  2347  01F7B6  968B               	bcf	3979,3,c	;volatile
  2348                           
  2349                           ;main.c: 93: }
  2350  01F7B8  0012               	return	
  2351  01F7BA                     l314:
  2352                           
  2353                           ;main.c: 94: else if(board == 0)
  2354  01F7BA  5014               	movf	_board,w,c
  2355  01F7BC  1015               	iorwf	_board+1,w,c
  2356  01F7BE  A4D8               	btfss	status,2,c
  2357  01F7C0  0012               	return	
  2358                           
  2359                           ;main.c: 95: {
  2360                           ;main.c: 96: TRISBbits.TRISB3 = 0;
  2361  01F7C2  9689               	bcf	3977,3,c	;volatile
  2362                           
  2363                           ;main.c: 97: TRISBbits.TRISB2 = 0;
  2364  01F7C4  9489               	bcf	3977,2,c	;volatile
  2365                           
  2366                           ;main.c: 98: TRISBbits.TRISB1 = 0;
  2367  01F7C6  9289               	bcf	3977,1,c	;volatile
  2368                           
  2369                           ;main.c: 99: TRISBbits.TRISB0 = 0;
  2370  01F7C8  9089               	bcf	3977,0,c	;volatile
  2371                           
  2372                           ;main.c: 100: TRISDbits.TRISD7 = 1;
  2373  01F7CA  8E8B               	bsf	3979,7,c	;volatile
  2374                           
  2375                           ;main.c: 101: TRISDbits.TRISD6 = 1;
  2376  01F7CC  8C8B               	bsf	3979,6,c	;volatile
  2377                           
  2378                           ;main.c: 102: TRISDbits.TRISD5 = 0;
  2379  01F7CE  9A8B               	bcf	3979,5,c	;volatile
  2380                           
  2381                           ;main.c: 103: TRISDbits.TRISD4 = 0;
  2382  01F7D0  988B               	bcf	3979,4,c	;volatile
  2383                           
  2384                           ;main.c: 104: TRISCbits.TRISC7 = 0;
  2385  01F7D2  9E8A               	bcf	3978,7,c	;volatile
  2386                           
  2387                           ;main.c: 105: TRISCbits.TRISC6 = 0;
  2388  01F7D4  9C8A               	bcf	3978,6,c	;volatile
  2389                           
  2390                           ;main.c: 106: TRISCbits.TRISC5 = 1;
  2391  01F7D6  8A8A               	bsf	3978,5,c	;volatile
  2392                           
  2393                           ;main.c: 107: TRISCbits.TRISC4 = 1;
  2394  01F7D8  888A               	bsf	3978,4,c	;volatile
  2395                           
  2396                           ;main.c: 108: TRISDbits.TRISD3 = 1;
  2397  01F7DA  868B               	bsf	3979,3,c	;volatile
  2398  01F7DC  0012               	return	
  2399  01F7DE                     __end_of_Board_Init:
  2400                           	opt stack 0
  2401  0000                     tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           prodh	equ	0xFF4
  2406                           prodl	equ	0xFF3
  2407                           intcon	equ	0xFF2
  2408                           postinc0	equ	0xFEE
  2409                           wreg	equ	0xFE8
  2410                           postdec1	equ	0xFE5
  2411                           fsr1l	equ	0xFE1
  2412                           postinc2	equ	0xFDE
  2413                           postdec2	equ	0xFDD
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           intcon	equ	0xFF2
  2424                           postinc0	equ	0xFEE
  2425                           wreg	equ	0xFE8
  2426                           postdec1	equ	0xFE5
  2427                           fsr1l	equ	0xFE1
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434                           	psect	rparam
  2435  0000                     tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1l	equ	0xFE1
  2446                           postinc2	equ	0xFDE
  2447                           postdec2	equ	0xFDD
  2448                           fsr2h	equ	0xFDA
  2449                           fsr2l	equ	0xFD9
  2450                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        158
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      25
    BANK0           160      0     156
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LED_Value
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED_Value->___wmul
    _Board_Select_Value->_ADCC_GetConversionResult

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7208
                                             12 COMRAM     1     1      0
                    _ADCC_Initialize
                         _Board_Init
                 _Board_Select_Value
                          _LED_Value
                  _SYSTEM_Initialize
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    4111
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      23
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Value                                            6     1      5    3052
                                              6 COMRAM     6     1      5
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Board_Select_Value                                   2     2      0      22
                                              4 COMRAM     2     2      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Board_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_Initialize
   _Board_Init
   _Board_Select_Value
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _LED_Value
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9C       5       97.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      19       1       26.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5       6        0.0%
DATA                 0      0      B5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Oct 23 10:40:27 2017

      __size_of_Board_Select_Value 00D6                        __CFG_CP$OFF 000000  
              ___wmul@multiplicand 0003                        __CFG_LVP$ON 000000  
                              l312 F796                                l305 F71C  
                              l314 F7BA                                l322 F9F0  
                              l307 F764                                l308 F76C  
                              l290 F91E                                l292 F95E  
                              l294 F988                                l296 F9B2  
                              _GIE 007F97                                u200 F60C  
                              u300 F9A8                                u220 F872  
                              u310 F9BA                                u250 F944  
                              u316 F9BC                                u260 F954  
                              u280 F97E                       __CFG_CPD$OFF 000000  
                              u387 F9DA                                _red 0018  
                              wreg 000FE8                       __CFG_ZCD$OFF 000000  
                             l1205 F95E               _ADCC_StartConversion F610  
                             _LATA 000F83                               _LATB 000F84  
                             _LATC 000F85                               _LATD 000F86  
                             _LATE 000F87                               _WPUA 000F10  
                             _WPUB 000F18                               _WPUC 000F20  
                             _WPUD 000F25                               _WPUE 000F2D  
                    __CFG_FCMEN$ON 000000                               _main F9E8  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             prodh 000FF4                               prodl 000FF3  
                             start 0000                 __size_of_LED_Value 005A  
                       _Board_High 00AE                         _Board_Init F770  
                    __CFG_CSWEN$ON 000000                       ___param_bank 000000  
                    __CFG_SCANE$ON 000000     __size_of_OSCILLATOR_Initialize 0018  
    __end_of_OSCILLATOR_Initialize F656                              _ADACQ 000F5C  
                            _ADACT 000F56                              _ADCAP 000F5D  
                            ?_main 0001                              _ADCLK 000F57  
                            _ADCNT 000F67                              _ADPCH 000F5F  
                            _ADREF 000F58                              _ADPRE 000F5E  
                    __CFG_WDTE$OFF 000000                              _ADRPT 000F66  
                   __CFG_DEBUG$OFF 000000                              _OSCEN 000EDC  
                            _TRISA 000F88                              _TRISB 000F89  
                            _TRISC 000F8A                              _TRISD 000F8B  
                            _TRISE 000F8C                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
                    __CFG_WRT5$OFF 000000                      __CFG_WRT6$OFF 000000  
          ??_ADCC_IsConversionDone 0001                      __CFG_WRT7$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                     __CFG_EBTR5$OFF 000000  
                   __CFG_EBTR6$OFF 000000                     __CFG_EBTR7$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                            _board 0014                              _green 000E  
                            _light 0010              ?_ADCC_StartConversion 0001  
               __CFG_MCLRE$EXTMCLR 000000                              tablat 000FF5  
                            status 000FD8                    __initialization F67C  
                     __end_of_main 0000                             ??_main 000D  
                    __activetblptr 000000                  __end_of_LED_Value F770  
                           _ADACCH 000F71                             _ADACCL 000F70  
                           _ADCON0 000F60                             _ADCON1 000F59  
                           _ADCON2 000F5A                             _ADCON3 000F5B  
                           _ADERRH 000F6F                             _ADERRL 000F6E  
                           _ADLTHH 000F6B                             _ADLTHL 000F6A  
                           _ADRESH 000F64                             _ADRESL 000F63  
                           _ADSTAT 000F65                             _ADUTHH 000F6D  
                           _ADUTHL 000F6C                             _ANSELA 000F11  
                           _ANSELB 000F19                             _ANSELC 000F21  
                           _ANSELD 000F26                             _ANSELE 000F2E  
                           _ODCONA 000F0F                             _ODCONB 000F17  
                           _ODCONC 000F1F                             _ODCOND 000F24  
                           _ODCONE 000F2C                     __CFG_WDTCCS$SC 000000  
               __CFG_RSTOSC$EXTOSC 000000                             _OSCFRQ 000EDE  
       ??_ADCC_GetConversionResult 0003                     __CFG_PWRTE$OFF 000000  
                      ?_Board_Init 0001                     __CFG_XINST$OFF 000000  
                           ___wmul F656                     __CFG_STVREN$ON 000000  
                           clear_0 F6BA                             _result 0012  
                  _ADCC_Initialize F6C6                       __pdataCOMRAM 0018  
                     LED_Value@low 0009                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
           ??_ADCC_StartConversion 0001                  _SYSTEM_Initialize F61C  
                       __accesstop 0060            __end_of__initialization F6C0  
               ?_SYSTEM_Initialize 0001                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                       __pidataBANK0 F876  
              ??_SYSTEM_Initialize 0002                __size_of_Board_Init 006E  
      ADCC_StartConversion@channel 0001          __end_of_SYSTEM_Initialize F62A  
       __end_of_Board_Select_Value F9E8                            ?___wmul 0001  
                  __CFG_PPS1WAY$ON 000000            __end_of_ADCC_Initialize F716  
                          _ADFLTRH 000F73                            _ADFLTRL 000F72  
                          _ADPREVH 000F62                            _ADPREVL 000F61  
                          _ADSTPTH 000F69                            _ADSTPTL 000F68  
                     _board_select 0016                            _OSCCON1 000ED8  
                          _OSCCON3 000EDA                            _OSCTUNE 000EDD  
                          _PPSLOCK 000EA0     __size_of_ADCC_IsConversionDone 000C  
    __end_of_ADCC_IsConversionDone F610                            __Hparam 0000  
                          __Lparam 0000                    __size_of___wmul 0026  
                          __pcinit F67C                            __ramtop 0F00  
                          __ptext0 F9E8                            __ptext1 F656  
                          __ptext2 F61C                            __ptext3 F7DE  
                          __ptext4 F63E                            __ptext5 F6C6  
                          __ptext6 F716                            __ptext7 F912  
                          __ptext8 F610                            __ptext9 F604  
            _OSCILLATOR_Initialize F63E           ??_PIN_MANAGER_Initialize 0001  
       __size_of_SYSTEM_Initialize 000E               end_of_initialization F6C0  
                        _LED_Value F716                      LED_Value@high 0007  
                     ??_Board_Init 0001                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                   ?_ADCC_Initialize 0001  
            __CFG_WDTCPS$WDTCPS_31 000000                          _TRISAbits 000F88  
                        _TRISBbits 000F89                          _TRISCbits 000F8A  
                        _TRISDbits 000F8B                 __end_of_Board_Init F7DE  
                 __CFG_FEXTOSC$OFF 000000                         ?_LED_Value 0007  
                        _Board_Low 0060                     __end_of___wmul F67C  
                    __pidataCOMRAM F602             ?_OSCILLATOR_Initialize 0001  
__size_of_ADCC_GetConversionResult 0014          ?_ADCC_GetConversionResult 0001  
              start_initialization F67C    __size_of_PIN_MANAGER_Initialize 0098  
    __size_of_ADCC_StartConversion 000C                   __CFG_LPBOREN$OFF 000000  
                         ??___wmul 0005                        __pdataBANK0 0060  
               _Board_Select_Value F912                        __pbssCOMRAM 000E  
              ?_Board_Select_Value 0001                        ??_LED_Value 000C  
           _PIN_MANAGER_Initialize F7DE               ??_Board_Select_Value 0005  
                 LED_Value@channel 000B              _ADCC_IsConversionDone F604  
                   ___wmul@product 0005                           _LATBbits 000F84  
                         _LATCbits 000F85                           _LATDbits 000F86  
              __CFG_BORV$VBOR_2P45 000000                         _ADCON0bits 000F60  
                       _ADCON1bits 000F59                         _ADCON2bits 000F5A  
                       _ADCON3bits 000F5B                  ___wmul@multiplier 0001  
                        copy_data0 F690                         _ADSTATbits 000F65  
                         __Hrparam 0000   __end_of_ADCC_GetConversionResult F63E  
                         __Lrparam 0000                 __CFG_BOREN$SBORDIS 000000  
          ??_OSCILLATOR_Initialize 0001                         _ANSELAbits 000F11  
         __size_of_ADCC_Initialize 0050                           __ptext10 F62A  
                         __ptext11 F770             ?_ADCC_IsConversionDone 0001  
                    __size_of_main 0618               __CFG_WDTCWS$WDTCWS_7 000000  
     __end_of_ADCC_StartConversion F61C        PIN_MANAGER_Initialize@state 0001  
          ?_PIN_MANAGER_Initialize 0001                  __CFG_CLKOUTEN$OFF 000000  
                      _PPSLOCKbits 000EA0           _ADCC_GetConversionResult F62A  
                     _ADACTPPSbits 000EAE     __end_of_PIN_MANAGER_Initialize F876  
                ??_ADCC_Initialize 0001  
